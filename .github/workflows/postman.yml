name: Postman Test and Allure Report

on:
  push:
    branches:
      - main

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Run Postman tests
      run: |
        docker run -t -v "$(pwd):/etc/newman" postman/newman run /etc/newman/Open_Banking_QA.postman_collection.json --reporters cli,junit --reporter-junit-export /etc/newman/test-results.xml

    - name: Download and Install Allure
      run: |
        sudo apt-get install -y allure
    # - name: Prepare Allure history # Step to prepare Allure history directory
    #   run: |
    #       cd ..
    #       mkdir -p ${{ vars.ALLURE_RESULTS_PATH }}

    # - name: Get Allure history # Step to retrieve Allure history
    #   uses: actions/checkout@v3
    #   if: always() # Execute even if previous steps fail
    #   continue-on-error: true # Continue execution even if the step fails
    #   with:
    #       ref: gh-pages # Specify the branch to retrieve Allure history from
    #       path: gh-pages # Set the destination path for Allure history

    - name: Allure report action # Step to generate Allure report
      uses: simple-elf/allure-report-action@master
      if: always() # Execute even if previous steps fail
      with:
          allure_results: ${{ vars.ALLURE_RESULTS_PATH }} # Specify the directory containing Allure results
          allure_history: allure-history # Specify the directory to store Allure history
          keep_reports: 0 # Specify the number of previous reports to keep  

    # - name: Find Allure binary
    #   run: |
    #     ls -l /usr/bin/allure

    # - name: Create Allure report directory
    #   run: mkdir -p ./allure-report

    # - name: Generate Allure report
    #   run: /usr/local/bin/allure generate ./allure-results --clean -o ./allure-report

    - name: Deploy Allure report to GitHub Pages # Step to deploy Allure report to GitHub Pages
      if: always() # Execute even if previous steps fail
      uses: peaceiris/actions-gh-pages@v3
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # Provide the GitHub token for authentication
          publish_branch: gh-pages # Specify the branch to publish the report to
          publish_dir: allure-history # Specify the directory containing the report
