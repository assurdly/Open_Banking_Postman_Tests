{"uid":"77ad8240e3315417","name":"List Users","fullName":"Open Banking Gateway API - AC/Open Banking Gateway API/Users/View all users#List Users","historyId":"deb7de86-3dab-428a-a766-ae04effdd8e2","time":{"start":1709128740282,"stop":1709128740319,"duration":37},"status":"failed","statusMessage":"Status code is 200, Status code response is OK, Response body property, Status is success, Message is Successfully fetched users","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"failed","statusMessage":"Status code is 200, Status code response is OK, Response body property, Status is success, Message is Successfully fetched users","steps":[{"name":"Status code is 200","time":{"start":1709128740316,"stop":1709128740316,"duration":0},"status":"failed","statusMessage":"expected response to have status code 200 but got 401","statusTrace":"Error: expected response to have status code 200 but got 401\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:5:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:4:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status code response is OK","time":{"start":1709128740316,"stop":1709128740316,"duration":0},"status":"failed","statusMessage":"expected response to have status reason 'OK' but got 'Unauthorized'","statusTrace":"Error: expected response to have status reason 'OK' but got 'Unauthorized'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:9:25)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:8:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Response body property","time":{"start":1709128740317,"stop":1709128740317,"duration":0},"status":"failed","statusMessage":"expected undefined to be a string","statusTrace":"Error: expected undefined to be a string\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:16:38)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:14:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Status is success","time":{"start":1709128740317,"stop":1709128740317,"duration":0},"status":"failed","statusMessage":"expected undefined to deeply equal 'success'","statusTrace":"Error: expected undefined to deeply equal 'success'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:22:35)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:21:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false},{"name":"Message is Successfully fetched users","time":{"start":1709128740318,"stop":1709128740318,"duration":0},"status":"failed","statusMessage":"expected 'Invalid credentials.' to deeply equal 'Successfully fetched users'","statusTrace":"Error: expected 'Invalid credentials.' to deeply equal 'Successfully fetched users'\n    at eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:26:36)\n    at e.test (evalmachine.<anonymous>:66:10289)\n    at Object.eval (eval at exec (evalmachine.<anonymous>:66:1816816), <anonymous>:25:4)\n    at u.exec (evalmachine.<anonymous>:66:1816851)\n    at t.exports (evalmachine.<anonymous>:66:5826)\n    at Object.<anonymous> (evalmachine.<anonymous>:66:8141)\n    at evalmachine.<anonymous>:15:26\n    at Array.forEach (<anonymous>)\n    at Object.emit (evalmachine.<anonymous>:14:59)\n    at evalmachine.<anonymous>:59:24","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true,"attachmentStep":false}],"attachments":[{"uid":"658f7dc9d6ea54c3","name":"Request Headers","source":"658f7dc9d6ea54c3.json","type":"application/json","size":306},{"uid":"4ee06c4d68f1d23e","name":"Response Headers","source":"4ee06c4d68f1d23e.json","type":"application/json","size":316},{"uid":"2f8ee632dd97660a","name":"Response Body","source":"2f8ee632dd97660a.txt","type":"text/plain","size":34}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":5,"attachmentsCount":3,"hasContent":true,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"Open Banking Gateway API - AC"},{"name":"suite","value":"Open Banking Gateway API"},{"name":"subSuite","value":"Users > View all users"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"Request","value":"GET - http://3.134.253.153/users?page=1&limit=20"},{"name":"Response Code","value":"401"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"77ad8240e3315417.json","parameterValues":["GET - http://3.134.253.153/users?page=1&limit=20","401"]}