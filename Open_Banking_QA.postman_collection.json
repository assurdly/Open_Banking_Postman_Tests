{
	"info": {
		"_postman_id": "2553bd59-253c-43b9-960a-2fb5bcb075f8",
		"name": "New Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30688161",
		"_collection_link": "https://bold-resonance-206112.postman.co/workspace/OpenBanking~9722a57e-f542-4e7d-8d94-2c33b9f33e30/collection/30688161-2553bd59-253c-43b9-960a-2fb5bcb075f8?action=share&source=collection_link&creator=30688161"
	},
	"item": [
		{
			"name": "Open Banking Gateway API - AC Test",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Sign Up",
							"item": [
								{
									"name": "Sign Up",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.environment.set(\"email\", jsonData.data.email);\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Email is in a valid format\", function () {\r",
													"    pm.expect(jsonData.data.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Phone number has a valid length\", function () {\r",
													"    pm.expect(jsonData.data.profile.phone).to.have.lengthOf.at.least(10);\r",
													"});\r",
													"\r",
													"pm.test(\"Phone number has a valid length\", function () {\r",
													"    pm.expect(jsonData.data.profile.phone).to.have.lengthOf.at.most(11);\r",
													"});\r",
													"\r",
													"pm.test(\"roleID should not be empty\", function () {\r",
													"    pm.expect(jsonData.data.roleId).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"ID should not be empty\", function () {\r",
													"    pm.expect(jsonData.data.id).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript"
											}
										},
										{
											"listen": "prerequest",
											"script": {
												"exec": [
													"// Define your base URL\r",
													"var Base_Url= \"http://3.134.253.153:4000\";\r",
													"\r",
													"// Set the base URL for all requests in this collection\r",
													"pm.globals.set(\"Base_Url\", Base_Url);\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomFirstName}}-{{$randomLastName}}@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Duplicate account Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"A user with email 'test@test.com' already exists.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{Token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	]
}
