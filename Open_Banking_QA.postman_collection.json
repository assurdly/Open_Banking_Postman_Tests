{
	"info": {
		"_postman_id": "08d43a18-60ec-4f0d-bc46-0836c58de0de",
		"name": "Open_Banking_QA",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30688161",
		"_collection_link": "https://bold-resonance-206112.postman.co/workspace/OpenBanking~9722a57e-f542-4e7d-8d94-2c33b9f33e30/collection/30688161-08d43a18-60ec-4f0d-bc46-0836c58de0de?action=share&source=collection_link&creator=30688161"
	},
	"item": [
		{
			"name": "Consent Management",
			"item": [
				{
					"name": "Admin",
					"item": [
						{
							"name": "Create AC",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"grant_types\": [\"authorization_code\",\"refresh_token\"],\n    \"redirect_uris\": [\"http://3.15.13.197:9010/callback\"],\n    \"response_types\": [\"code\"],\n    \"scope\": \"account statement card bvn sync\",\n    \"client_name\": \"Demo API Consumer\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://3.15.13.197:4445/admin/clients",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "4445",
									"path": [
										"admin",
										"clients"
									]
								}
							},
							"response": [
								{
									"name": "Create AC",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"grant_types\": [\"authorization_code\",\"refresh_token\"],\n    \"redirect_uris\": [\"http://3.15.13.197:9010/callback\"],\n    \"response_types\": [\"code\"],\n    \"scope\": \"account statement card bvn sync\",\n    \"client_name\": \"Demo API Consumer\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://3.15.13.197:4445/admin/clients",
											"protocol": "http",
											"host": [
												"3",
												"15",
												"13",
												"197"
											],
											"port": "4445",
											"path": [
												"admin",
												"clients"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "private, no-cache, no-store, must-revalidate"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "/admin/clients/8f7aba62-955a-4895-845c-c0c24d75335a"
										},
										{
											"key": "Date",
											"value": "Mon, 30 Oct 2023 17:31:31 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1415"
										}
									],
									"cookie": [],
									"body": "{\n    \"client_id\": \"8f7aba62-955a-4895-845c-c0c24d75335a\",\n    \"client_name\": \"Demo API Consumer\",\n    \"client_secret\": \"xDX1kGHr0zLclrZZGbChYl6KmB\",\n    \"redirect_uris\": [\n        \"http://3.15.13.197:9010/callback\"\n    ],\n    \"grant_types\": [\n        \"authorization_code\",\n        \"refresh_token\"\n    ],\n    \"response_types\": [\n        \"code\"\n    ],\n    \"scope\": \"account statement card bvn sync\",\n    \"audience\": [],\n    \"owner\": \"\",\n    \"policy_uri\": \"\",\n    \"allowed_cors_origins\": [],\n    \"tos_uri\": \"\",\n    \"client_uri\": \"\",\n    \"logo_uri\": \"\",\n    \"contacts\": null,\n    \"client_secret_expires_at\": 0,\n    \"subject_type\": \"public\",\n    \"jwks\": {},\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"userinfo_signed_response_alg\": \"none\",\n    \"created_at\": \"2023-10-30T17:31:31Z\",\n    \"updated_at\": \"2023-10-30T17:31:31.092964Z\",\n    \"metadata\": {},\n    \"registration_access_token\": \"ory_at_cvSmo5RVGbtmoBX30W1a57PZIlnnkOCtqaK2JFNAF1E.te-xKHF2SAC3Tf07MOUS5LgRJtmNOmXYhwcBEhtsszE\",\n    \"registration_client_uri\": \"http://3.15.13.197:4444/oauth2/register/8f7aba62-955a-4895-845c-c0c24d75335a\",\n    \"skip_consent\": false,\n    \"authorization_code_grant_access_token_lifespan\": null,\n    \"authorization_code_grant_id_token_lifespan\": null,\n    \"authorization_code_grant_refresh_token_lifespan\": null,\n    \"client_credentials_grant_access_token_lifespan\": null,\n    \"implicit_grant_access_token_lifespan\": null,\n    \"implicit_grant_id_token_lifespan\": null,\n    \"jwt_bearer_grant_access_token_lifespan\": null,\n    \"refresh_token_grant_id_token_lifespan\": null,\n    \"refresh_token_grant_access_token_lifespan\": null,\n    \"refresh_token_grant_refresh_token_lifespan\": null\n}"
								}
							]
						},
						{
							"name": "Create AP",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"grant_types\": [\"client_credentials\"],\n    \"client_name\": \"Demo API Provider\",\n    \"token_endpoint_auth_method\": \"client_secret_post\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://3.15.13.197:4445/admin/clients",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "4445",
									"path": [
										"admin",
										"clients"
									]
								}
							},
							"response": [
								{
									"name": "Create AP",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"grant_types\": [\"client_credentials\"],\n    \"client_name\": \"Demo API Provider\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://3.15.13.197:4445/admin/clients",
											"protocol": "http",
											"host": [
												"3",
												"15",
												"13",
												"197"
											],
											"port": "4445",
											"path": [
												"admin",
												"clients"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Cache-Control",
											"value": "private, no-cache, no-store, must-revalidate"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Location",
											"value": "/admin/clients/c7b06859-e551-4510-b2bc-3d4e8dfe363e"
										},
										{
											"key": "Date",
											"value": "Mon, 30 Oct 2023 17:49:42 GMT"
										},
										{
											"key": "Content-Length",
											"value": "1361"
										}
									],
									"cookie": [],
									"body": "{\n    \"client_id\": \"c7b06859-e551-4510-b2bc-3d4e8dfe363e\",\n    \"client_name\": \"Demo API Provider\",\n    \"client_secret\": \"oIzSnp3wqZZ7ekXzabuQ4un8xm\",\n    \"redirect_uris\": null,\n    \"grant_types\": [\n        \"client_credentials\"\n    ],\n    \"response_types\": null,\n    \"scope\": \"offline_access offline openid\",\n    \"audience\": [],\n    \"owner\": \"\",\n    \"policy_uri\": \"\",\n    \"allowed_cors_origins\": [],\n    \"tos_uri\": \"\",\n    \"client_uri\": \"\",\n    \"logo_uri\": \"\",\n    \"contacts\": null,\n    \"client_secret_expires_at\": 0,\n    \"subject_type\": \"public\",\n    \"jwks\": {},\n    \"token_endpoint_auth_method\": \"client_secret_basic\",\n    \"userinfo_signed_response_alg\": \"none\",\n    \"created_at\": \"2023-10-30T17:49:43Z\",\n    \"updated_at\": \"2023-10-30T17:49:42.762008Z\",\n    \"metadata\": {},\n    \"registration_access_token\": \"ory_at_Sl2pR03OighD4_-f95yq9862-ygRFtgl1R9zy0-4wKQ.Hook0XTFNjWYQUM_FfEBQ8eKpPwzEa08V-zpYnqayP0\",\n    \"registration_client_uri\": \"http://3.15.13.197:4444/oauth2/register/c7b06859-e551-4510-b2bc-3d4e8dfe363e\",\n    \"skip_consent\": false,\n    \"authorization_code_grant_access_token_lifespan\": null,\n    \"authorization_code_grant_id_token_lifespan\": null,\n    \"authorization_code_grant_refresh_token_lifespan\": null,\n    \"client_credentials_grant_access_token_lifespan\": null,\n    \"implicit_grant_access_token_lifespan\": null,\n    \"implicit_grant_id_token_lifespan\": null,\n    \"jwt_bearer_grant_access_token_lifespan\": null,\n    \"refresh_token_grant_id_token_lifespan\": null,\n    \"refresh_token_grant_access_token_lifespan\": null,\n    \"refresh_token_grant_refresh_token_lifespan\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "AC",
					"item": [
						{
							"name": "Initialize Consent",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://3.15.13.197:4444/oauth2/auth?client_id=8f7aba62-955a-4895-845c-c0c24d75335a&redirect_uri=http://3.15.13.197:9010/callback&response_type=code&scope=account+statement+card+bvn+sync&state=ujqqgkosmmrfftfrqoisuznk",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "4444",
									"path": [
										"oauth2",
										"auth"
									],
									"query": [
										{
											"key": "client_id",
											"value": "8f7aba62-955a-4895-845c-c0c24d75335a"
										},
										{
											"key": "redirect_uri",
											"value": "http://3.15.13.197:9010/callback"
										},
										{
											"key": "response_type",
											"value": "code"
										},
										{
											"key": "scope",
											"value": "account+statement+card+bvn+sync"
										},
										{
											"key": "state",
											"value": "ujqqgkosmmrfftfrqoisuznk"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "AP",
					"item": [
						{
							"name": "Exchange Token",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "client_id",
											"value": "3c50a023-632e-4109-9bb4-cbb244e31906",
											"type": "text"
										},
										{
											"key": "client_secret",
											"value": "Q-KtZJY3G0l_SgDk5maloXCE1b",
											"type": "text"
										},
										{
											"key": "grant_type",
											"value": "client_credentials",
											"type": "text"
										},
										{
											"key": "scope",
											"value": "offline",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "http://3.15.13.197:4444/oauth2/token",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "4444",
									"path": [
										"oauth2",
										"token"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Verify Access Token",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				}
			]
		},
		{
			"name": "Mocked Services",
			"item": [
				{
					"name": "Direct Debit",
					"item": [
						{
							"name": "Banks",
							"item": [
								{
									"name": "Get Banks",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_url}}/direct-debits/banks?limit=1000&page=1",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"direct-debits",
												"banks"
											],
											"query": [
												{
													"key": "q",
													"value": "first",
													"disabled": true
												},
												{
													"key": "limit",
													"value": "1000"
												},
												{
													"key": "page",
													"value": "1"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get Banks",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{base_url}}/direct-debits/banks?limit=1000&page=1",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"direct-debits",
														"banks"
													],
													"query": [
														{
															"key": "q",
															"value": "first",
															"disabled": true
														},
														{
															"key": "limit",
															"value": "1000"
														},
														{
															"key": "page",
															"value": "1"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Access-Control-Allow-Origin",
													"value": "*"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1262"
												},
												{
													"key": "ETag",
													"value": "W/\"4ee-fKVw+X6/tHGtNhZh9NTCQJmAe1Q\""
												},
												{
													"key": "Date",
													"value": "Tue, 24 Oct 2023 12:06:37 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"code\": \"401\",\n            \"name\": \"ASO Savings and Loans\"\n        },\n        {\n            \"code\": \"044\",\n            \"name\": \"Access Bank\"\n        },\n        {\n            \"code\": \"063\",\n            \"name\": \"Access Bank (Diamond)\"\n        },\n        {\n            \"code\": \"023\",\n            \"name\": \"Citibank Nigeria\"\n        },\n        {\n            \"code\": \"559\",\n            \"name\": \"Coronation Merchant Bank\"\n        },\n        {\n            \"code\": \"050\",\n            \"name\": \"Ecobank Nigeria\"\n        },\n        {\n            \"code\": \"070\",\n            \"name\": \"Fidelity Bank\"\n        },\n        {\n            \"code\": \"011\",\n            \"name\": \"First Bank of Nigeria\"\n        },\n        {\n            \"code\": \"214\",\n            \"name\": \"First City Monument Bank\"\n        },\n        {\n            \"code\": \"00103\",\n            \"name\": \"Globus Bank\"\n        },\n        {\n            \"code\": \"058\",\n            \"name\": \"Guaranty Trust Bank\"\n        },\n        {\n            \"code\": \"030\",\n            \"name\": \"Heritage Bank\"\n        },\n        {\n            \"code\": \"301\",\n            \"name\": \"Jaiz Bank\"\n        },\n        {\n            \"code\": \"082\",\n            \"name\": \"Keystone Bank\"\n        },\n        {\n            \"code\": \"100002\",\n            \"name\": \"Paga\"\n        },\n        {\n            \"code\": \"104\",\n            \"name\": \"Parallex Bank\"\n        },\n        {\n            \"code\": \"311\",\n            \"name\": \"Parkway - ReadyCash\"\n        },\n        {\n            \"code\": \"999992\",\n            \"name\": \"Paycom\"\n        },\n        {\n            \"code\": \"076\",\n            \"name\": \"Polaris Bank\"\n        },\n        {\n            \"code\": \"221\",\n            \"name\": \"Stanbic IBTC Bank\"\n        },\n        {\n            \"code\": \"068\",\n            \"name\": \"Standard Chartered Bank\"\n        },\n        {\n            \"code\": \"232\",\n            \"name\": \"Sterling Bank\"\n        },\n        {\n            \"code\": \"100\",\n            \"name\": \"Suntrust Bank\"\n        },\n        {\n            \"code\": \"51211\",\n            \"name\": \"TCF MFB\"\n        },\n        {\n            \"code\": \"032\",\n            \"name\": \"Union Bank of Nigeria\"\n        },\n        {\n            \"code\": \"033\",\n            \"name\": \"United Bank For Africa\"\n        },\n        {\n            \"code\": \"215\",\n            \"name\": \"Unity Bank\"\n        },\n        {\n            \"code\": \"035\",\n            \"name\": \"Wema Bank\"\n        },\n        {\n            \"code\": \"057\",\n            \"name\": \"Zenith Bank\"\n        }\n    ],\n    \"metadata\": {\n        \"count\": 29,\n        \"totalCount\": 29,\n        \"totalPages\": 1,\n        \"currentPage\": 1\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Create Direct Debit Mandate",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/direct-debits",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits"
									]
								},
								"description": "This endpoint creates a direct debit mandate on a customer's account.\n\n#### Request Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| reference | `string` | `Required` Unique reference ID of the direct debit mandate. This is SP's external reference |\n| description | `string` | `Required` Description of the mandate. This would be displayed to the customer |\n| source_account | `string` | `Required` Account number of the accountholder in NUBAN format |\n| maximum_single_amount | `number` | `Optional` The maximum single amount that can be debited using the specific mandate at a particular time |\n| maximum_cumulative_amount | `number` | `Optional` The maximum cumulative amount that can be debited using the specific mandate at a particular time |\n| maximum_transactions | `number` | `Optional` The maximum number of debits that can be done with the specific mandate |\n| start_date | `date` | `Required` The start date of the mandate |\n| expiry_date | `date` | `Optional` The date at which the mandate expires. Transactions called on the mandate after expiration would fail |\n| frequency | `string` | `Optional` Specifies how often a mandate would be called |\n| beneficiary_name | `string` | `Required` Account number of the merchant in NUBAN format |\n| beneficiary_account_number | `string` | `Required` The account number of the beneficiary |\n| beneficiary_bank_code | `string` | `Required` The bank code of beneficiary or merchant bank account number |\n| webhook | `string` | `Optional` The URL that the API Provider would call to notify of the API Consumer about the status of the transaction. Usually in the format https://{url}/reference/ |\n\n---\n\n#### Response Body Fields\n\n| Field | Type | Description |\n| --- | --- | --- |\n| account_number | `string` | `Required` Account number of the customer to which the mandate is attached |\n| mandate_status | `string` | `Required` Current status of the mandate such as `active`, `inactive`, or `expired` |\n| mandate_id | `string` | `Required` the API Consumer internal mandate ID for the specific mandate |\n| created_on | `datetime` | `Required` The time when the mandate was created |\n| reference | `string` | `Required` Unique reference ID of the direct debit mandate. This is SP's external reference |\n| description | `string` | `Required` Description of the mandate. This would be displayed to the customer |\n| source_account | `string` | `Required` Account number of the accountholder in NUBAN format |\n| maximum_single_amount | `number` | `Optional` The maximum single amount that can be debited using the specific mandate at a particular time |\n| maximum_cumulative_amount | `number` | `Optional` The maximum cumulative amount that can be debited using the specific mandate at a particular time |\n| maximum_transactions | `number` | `Optional` The maximum number of debits that can be done with the specific mandate |\n| start_date | `date` | `Required` The start date of the mandate |\n| expiry_date | `date` | `Optional` The date at which the mandate expires. Transactions called on the mandate after expiration would fail |\n| frequency | `string` | `Optional` Specifies how often a mandate would be called |\n| beneficiary_name | `string` | `Required` Account number of the merchant in NUBAN format |\n| beneficiary_account_number | `string` | `Required` The account number of the beneficiary |\n| beneficiary_bank_code | `string` | `Required` The bank code of beneficiary or merchant bank account number |\n| webhook | `string` | `Optional` The URL that the API Provider would call to notify of the API Consumer about the status of the transaction. Usually in the format https://{url}/reference/ |"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"{{$isoTimestamp}}\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"reference\": \"{{$randomPassword}}\",\n        \"description\": \"{{$body 'description'}}\",\n        \"sourceAccountId\": \"{{$randomUUID}}\",\n        \"maximumSingleAmount\": {{$body 'maximum_single_amount'}},\n        \"maximumCumulativeAmount\": {{$body 'maximum_cumulative_amount'}},\n        \"maximumTransactions\": {{$body 'maximum_transactions'}},\n        \"startDate\": \"{{$body 'start_date'}}\",\n        \"expiryDate\": \"{{$body 'expiry_date'}}\",\n        \"frequency\": \"{{$body 'frequency'}}\",\n        \"beneficiaryName\": \"{{$body 'beneficiary_name'}}\",\n        \"beneficiaryAccountNumber\": \"{{$body 'beneficiary_account_number'}}\",\n        \"beneficiaryBankCode\": \"{{$body 'beneficiary_bank_code'}}\",\n        \"webhookUrl\": \"{{$body 'webhook'}}\",\n        \"fixedAmount\": {{$body 'fixed_amount'}},\n        \"id\": \"{{$randomUUID}}\",\n        \"status\": \"inactive\",\n        \"createdAt\": \"{{$isoTimestamp}}\",\n        \"updatedAt\": \"{{$isoTimestamp}}\"\n    }\n}"
								},
								{
									"name": "start_date_in_past",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Start date cannot be in the past.\"\n}"
								},
								{
									"name": "expiry_date_in_past",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Expiry date cannot be in the past.\"\n}"
								},
								{
									"name": "expiry_date_before_start_date",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Expiry date cannot be before the start date.\"\n}"
								},
								{
									"name": "unknown_bank_code",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Unknown bank code.\",\n    \"errorCode\": \"16\"\n}"
								},
								{
									"name": "invalid_bank_account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Invalid account.\",\n    \"errorCode\": \"07\"\n}"
								},
								{
									"name": "dormant_account",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Dormant account.\",\n    \"errorCode\": \"06\"\n}"
								}
							]
						},
						{
							"name": "Get Direct Debit Mandates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_url}}/direct-debits",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits"
									]
								},
								"description": "This endpoint retrieves mandates for a given customer. Where the mandate_id is specified in the request param, the details of that specific mandate are returned.  \nResponse fields returned are defined in the create mandate endpoint.\n\n`This endpoint supports pagination and filtering`"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "672"
										},
										{
											"key": "ETag",
											"value": "W/\"2a0-a9R7eQA768hP6PPYN/cfgpqQudA\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:02:16 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": [\n        {\n            \"id\": \"d2a1e0f9-8c7b6a5-d4e3f2-1g0h9i8j7k6\",\n            \"reference\": \"0X1Y2Z3A4B5C6D7E8F9G0H\",\n            \"description\": \"Monthly Rent Payment\",\n            \"sourceAccountId\": \"c5b4d3e2f1-0g9h8i7j6k5l4m3n2o1p0q9r8s7t6u5v4w3x2y1\",\n            \"maximumSingleAmount\": 8000,\n            \"fixedAmount\": 12000,\n            \"maximumCumulativeAmount\": 96000,\n            \"maximumTransactions\": 12,\n            \"startDate\": \"2023-11-25T14:30:00.000Z\",\n            \"expiryDate\": \"2024-11-25T14:30:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"Alice Johnson\",\n            \"beneficiaryAccountNumber\": \"9876543210\",\n            \"beneficiaryBankCode\": \"789\",\n            \"webhookUrl\": \"https://rentpayment.example.com/webhook/abcdef1234567890\",\n            \"createdAt\": \"2023-11-25T14:30:00.001Z\",\n            \"updatedAt\": \"2023-11-25T14:30:00.001Z\"\n        },\n        {\n            \"id\": \"f6d5e4c3-2a1b0c9-8d7e6f5d-4a3b2c1d-0e9f8g7d6c5b\",\n            \"reference\": \"1B2C3D4E5F6G7H8I9J0K\",\n            \"description\": \"Monthly Subscription\",\n            \"sourceAccountId\": \"a2b1c0d9e8-7f6g5h4i3j2k1l0m9n8o7p6q5r4s3t2u1v0w9x8y7\",\n            \"maximumSingleAmount\": 10000,\n            \"fixedAmount\": 20000,\n            \"maximumCumulativeAmount\": 80000,\n            \"maximumTransactions\": 8,\n            \"startDate\": \"2023-12-01T08:00:00.000Z\",\n            \"expiryDate\": \"2024-12-01T08:00:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"John Doe\",\n            \"beneficiaryAccountNumber\": \"0123456789\",\n            \"beneficiaryBankCode\": \"123\",\n            \"webhookUrl\": \"https://subscription.example.com/webhook/abcdef1234567890\",\n            \"createdAt\": \"2023-12-01T08:00:00.001Z\",\n            \"updatedAt\": \"2023-12-01T08:00:00.001Z\"\n        },\n        {\n            \"id\": \"e6f5d4c3-2a1b0c9-8d7e6f5d-4a3b2c1d-0e9f8g7d6c5b\",\n            \"reference\": \"2K3L4M5N6O7P8Q9R0S1T\",\n            \"description\": \"Weekly Utility Bill\",\n            \"sourceAccountId\": \"1A2B3C4D5E6F7G8H9I0J\",\n            \"maximumSingleAmount\": 6000,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 72000,\n            \"maximumTransactions\": 12,\n            \"startDate\": \"2023-11-20T10:00:00.000Z\",\n            \"expiryDate\": \"2024-11-20T10:00:00.000Z\",\n            \"frequency\": \"weekly\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"Mark Wilson\",\n            \"beneficiaryAccountNumber\": \"0123456789\",\n            \"beneficiaryBankCode\": \"456\",\n            \"webhookUrl\": \"https://utilitybill.example.com/webhook/abcdefg123\",\n            \"createdAt\": \"2023-11-20T10:00:00.001Z\",\n            \"updatedAt\": \"2023-11-20T10:00:00.001Z\"\n        },\n        {\n            \"id\": \"3c2b1a0d-9e8f7g6h5-4i3j2k1l0m9n8o7p6q5r4s3t2u1v0w9x8y7\",\n            \"reference\": \"3U4V5W6X7Y8Z9O0P1Q2R3S\",\n            \"description\": \"Daily Coffee Subscription\",\n            \"sourceAccountId\": \"7A8B9C0D1E2F3G4H5I6J7K\",\n            \"maximumSingleAmount\": 1500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 9000,\n            \"maximumTransactions\": 18,\n            \"startDate\": \"2023-11-30T12:00:00.000Z\",\n            \"expiryDate\": \"2024-11-30T12:00:00.000Z\",\n            \"frequency\": \"daily\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"Lucy Brown\",\n            \"beneficiaryAccountNumber\": \"9876543210\",\n            \"beneficiaryBankCode\": \"789\",\n            \"webhookUrl\": \"https://coffeesubscription.example.com/webhook/abcdefg123\",\n            \"createdAt\": \"2023-11-30T12:00:00.001Z\",\n            \"updatedAt\": \"2023-11-30T12:00:00.001Z\"\n        },\n        {\n            \"id\": \"4c3d2e1f-0g9h8i7j6-5k4l3m2n1o0p9q8r7s6t5u4v3w2x1y0\",\n            \"reference\": \"4O5P6Q7R8S9T0U1V2W3X4Y5Z6A7B8C9D0\",\n            \"description\": \"Monthly Car Loan Payment\",\n            \"sourceAccountId\": \"5A6B7C8D9E0F1G2H3I4J5K6L7M8N9O0P\",\n            \"maximumSingleAmount\": 7000,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 60000,\n            \"maximumTransactions\": 6,\n            \"startDate\": \"2023-12-10T16:30:00.000Z\",\n            \"expiryDate\": \"2024-12-10T16:30:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"Michael Johnson\",\n            \"beneficiaryAccountNumber\": \"1234567890\",\n            \"beneficiaryBankCode\": \"123\",\n            \"webhookUrl\": \"https://carloanpayment.example.com/webhook/abcdefg123\",\n            \"createdAt\": \"2023-12-10T16:30:00.001Z\",\n            \"updatedAt\": \"2023-12-10T16:30:00.001Z\"\n        },\n        {\n            \"id\": \"0e9f8g7d6-5c4b3a2-1d0e9f8g-7h6i5j4k3l2m1n0o9p8\",\n            \"reference\": \"5R6S7T8U9V0W1X2Y3Z4A5B6C7D8E9F0\",\n            \"description\": \"Monthly Phone Bill Payment\",\n            \"sourceAccountId\": \"6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P\",\n            \"maximumSingleAmount\": 9500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 76000,\n            \"maximumTransactions\": 8,\n            \"startDate\": \"2023-12-15T14:00:00.000Z\",\n            \"expiryDate\": \"2024-12-15T14:00:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"inactive\",\n            \"beneficiaryName\": \"Sarah Davis\",\n            \"beneficiaryAccountNumber\": \"5432109876\",\n            \"beneficiaryBankCode\": \"456\",\n            \"webhookUrl\": \"https://phonebillpayment.example.com/webhook/abcdefg123456789\",\n            \"createdAt\": \"2023-12-15T14:00:00.002Z\",\n            \"updatedAt\": \"2023-12-15T14:00:00.002Z\"\n        },\n        {\n            \"id\": \"8d7e6f5d-4c3b2a1-0d9e8f7-6g5h4i3j2k1l0m9n8o7p6q5\",\n            \"reference\": \"6W7X8Y9Z0A1B2C3D4E5F6G7H8I9J0K\",\n            \"description\": \"Monthly Magazine Subscription\",\n            \"sourceAccountId\": \"1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P\",\n            \"maximumSingleAmount\": 8500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 85000,\n            \"maximumTransactions\": 10,\n            \"startDate\": \"2023-12-20T15:30:00.000Z\",\n            \"expiryDate\": \"2024-12-20T15:30:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"inactive\",\n            \"beneficiaryName\": \"David Smith\",\n            \"beneficiaryAccountNumber\": \"9876543210\",\n            \"beneficiaryBankCode\": \"789\",\n            \"webhookUrl\": \"https://magazinesubscription.example.com/webhook/abcdefg12345\",\n            \"createdAt\": \"2023-12-20T15:30:00.003Z\",\n            \"updatedAt\": \"2023-12-20T15:30:00.003Z\"\n        },\n        {\n            \"id\": \"3c2b1a0d-9e8f7g6-5h4i3j2k1l0m9n8o7p6q5r4s3t2u1v0w9x8y7\",\n            \"reference\": \"7X8Y9Z0A1B2C3D4E5F6G7H8I9J0K1L2M3N4O5P\",\n            \"description\": \"Monthly Internet Bill\",\n            \"sourceAccountId\": \"6A7B8C9D0E1F2G3H4I5J6K7L8M9N0O1P2Q3R4S5T6U7V8W9X0\",\n            \"maximumSingleAmount\": 7500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 90000,\n            \"maximumTransactions\": 9,\n            \"startDate\": \"2023-12-25T12:30:00.000Z\",\n            \"expiryDate\": \"2024-12-25T12:30:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"expired\",\n            \"beneficiaryName\": \"Emily White\",\n            \"beneficiaryAccountNumber\": \"1234567890\",\n            \"beneficiaryBankCode\": \"456\",\n            \"webhookUrl\": \"https://internetbill.example.com/webhook/abcdefg123456\",\n            \"createdAt\": \"2023-12-25T12:30:00.004Z\",\n            \"updatedAt\": \"2023-12-25T12:30:00.004Z\"\n        },\n        {\n            \"id\": \"9e8f7g6d5-4c3b2a1-0d9e8f7-6g5h4i3j2k1l0m9n8o7p6q5\",\n            \"reference\": \"8Q9R0S1T2U3V4W5X6Y7Z8A9B0C1D2E3F4G5H6I7J8K9\",\n            \"description\": \"Monthly Mortgage Payment\",\n            \"sourceAccountId\": \"1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P2Q3R4S5T6U7V8W9X0\",\n            \"maximumSingleAmount\": 8500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 85000,\n            \"maximumTransactions\": 10,\n            \"startDate\": \"2023-12-30T08:30:00.000Z\",\n            \"expiryDate\": \"2024-12-30T08:30:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"active\",\n            \"beneficiaryName\": \"Sophia Martin\",\n            \"beneficiaryAccountNumber\": \"9876543210\",\n            \"beneficiaryBankCode\": \"789\",\n            \"webhookUrl\": \"https://mortgagepayment.example.com/webhook/abcdefg1234567\",\n            \"createdAt\": \"2023-12-30T08:30:00.005Z\",\n            \"updatedAt\": \"2023-12-30T08:30:00.005Z\"\n        },\n        {\n            \"id\": \"6g5h4i3d2-1e0f9g8-7h6i5j4k3l2m1n0o9p8q7r6s5t4u3v2w1x0y9\",\n            \"reference\": \"9A0B1C2D3E4F5G6H7I8J9K0L1M2N3O4P5Q6R7S8T9U0V1W2X3\",\n            \"description\": \"Monthly Electricity Bill\",\n            \"sourceAccountId\": \"2A3B4C5D6E7F8G9H0I1J2K3L4M5N6O7P8Q9R0S1T2U3V4W5X6Y7\",\n            \"maximumSingleAmount\": 5500,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 66000,\n            \"maximumTransactions\": 12,\n            \"startDate\": \"2023-11-28T09:00:00.000Z\",\n            \"expiryDate\": \"2024-11-28T09:00:00.000Z\",\n            \"frequency\": \"monthly\",\n            \"status\": \"cancelled\",\n            \"beneficiaryName\": \"Daniel Brown\",\n            \"beneficiaryAccountNumber\": \"1234567890\",\n            \"beneficiaryBankCode\": \"456\",\n            \"webhookUrl\": \"https://electricitybill.example.com/webhook/abcdefg12345\",\n            \"createdAt\": \"2023-11-28T09:00:00.006Z\",\n            \"updatedAt\": \"2023-11-28T09:00:00.006Z\"\n        },\n        {\n            \"id\": \"3c2b1a0d-9e8f7g6-5h4i3j2k1l0m9n8o7p6q5r4s3t2u1v0w9x8y7\",\n            \"reference\": \"0Z1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P7Q8R9S0T1U2V3W4X5\",\n            \"description\": \"Weekly Groceries\",\n            \"sourceAccountId\": \"1A2B3C4D5E6F7G8H9I0J1K2L3M4N5O6P7Q8R9S0T1U2V3W4X5Y6\",\n            \"maximumSingleAmount\": 5000,\n            \"fixedAmount\": null,\n            \"maximumCumulativeAmount\": 60000,\n            \"maximumTransactions\": 12,\n            \"startDate\": \"2023-11-26T16:00:00.000Z\",\n            \"expiryDate\": \"2024-11-26T16:00:00.000Z\",\n            \"frequency\": \"weekly\",\n            \"status\": \"cancelled\",\n            \"beneficiaryName\": \"Olivia Wilson\",\n            \"beneficiaryAccountNumber\": \"9876543210\",\n            \"beneficiaryBankCode\": \"789\",\n            \"webhookUrl\": \"https://groceries.example.com/webhook/abcdefg123\",\n            \"createdAt\": \"2023-11-26T16:00:00.007Z\",\n            \"updatedAt\": \"2023-11-26T16:00:00.007Z\"\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "Get Direct Debits By ID",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base_url}}/direct-debits/:id",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits",
										":id"
									],
									"query": [
										{
											"key": null,
											"value": "",
											"disabled": true
										}
									],
									"variable": [
										{
											"key": "id",
											"value": "rgergrgewr"
										}
									]
								},
								"description": "This endpoint retrieves mandates for a given customer. Where the mandate_id is specified in the request param, the details of that specific mandate are returned.  \nResponse fields returned are defined in the create mandate endpoint.\n\n`This endpoint supports pagination and filtering`"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/direct-debits/:id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "{{$randomUUID}}"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "670"
										},
										{
											"key": "ETag",
											"value": "W/\"29e-mop+Wl6N+F/EyIdSq+MYgKCL0fI\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:02:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"reference\": \"{{$randomPassword}}\",\n        \"description\": \"{{$randomProductName}}\",\n        \"sourceAccountId\": \"{{$randomUUID}}\",\n        \"maximumSingleAmount\": {{$randomInt}},\n        \"maximumCumulativeAmount\": {{$randomInt}},\n        \"maximumTransactions\": {{$randomInt}},\n        \"startDate\": \"2023-11-25T14:30:00.000Z\",\n        \"expiryDate\": \"2024-11-25T14:30:00.000Z\",\n        \"frequency\": \"monthly\",\n        \"beneficiaryName\": \"{{$randomBankAccountName}}\",\n        \"beneficiaryAccountNumber\": \"{{$randomBankAccount}}\",\n        \"beneficiaryBankCode\": \"{{$randomBankAccountBic}}\",\n        \"webhookUrl\": \"{{$randomUrl}}\",\n        \"fixedAmount\": {{$randomInt}},\n        \"id\": \"{{$randomUUID}}\",\n        \"status\": \"active\",\n        \"createdAt\": \"{{$isoTimestamp}}\",\n        \"updatedAt\": \"{{$isoTimestamp}}\"\n    }\n}"
								}
							]
						},
						{
							"name": "Toggle Direct Debit Status",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success_off",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base_url}}/direct-debits/:mandate_id/status/toggle",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits",
										":mandate_id",
										"status",
										"toggle"
									],
									"variable": [
										{
											"key": "mandate_id",
											"value": "4ab4eb1f-b7f1-45cc-9f14-ffd47af91fdf"
										}
									]
								}
							},
							"response": [
								{
									"name": "success_on",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/direct-debits/:mandate_id/status",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits",
												":mandate_id",
												"status"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "647dccf0-358f-4176-8f3c-1748fff31f69"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "ETag",
											"value": "W/\"1a-pIPrt4esgEyEkX/w62Rnrj9XXdg\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:03:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"status\": \"active\"\n    }\n}"
								},
								{
									"name": "success_off",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"url": {
											"raw": "{{base_url}}/direct-debits/:mandate_id/status",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits",
												":mandate_id",
												"status"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "647dccf0-358f-4176-8f3c-1748fff31f69"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "ETag",
											"value": "W/\"1a-pIPrt4esgEyEkX/w62Rnrj9XXdg\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:03:55 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"status\": \"inactive\"\n    }\n}"
								},
								{
									"name": "mandate_not_found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Mandate not found\",\n    \"errorCode\": \"25\"\n}"
								}
							]
						},
						{
							"name": "Trigger a Direct Debit Payment Copy",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "mandate_not_active",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n\t\"amount\": 2000\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/direct-debits/:mandate_id/trigger",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits",
										":mandate_id",
										"trigger"
									],
									"variable": [
										{
											"key": "mandate_id",
											"value": "776d41a5-18d5-4b57-9eb9-f47304b24a2d"
										}
									]
								},
								"description": "This endpoint is used to trigger a direct debit mandate transaction. For a transaction to be successful, the direct debit mandate must be in an active status and the customer must have funds to cover the entire amount .\n\nThe direct debit endpoint will not support partial debits - all transactions must succeed or fail as a whole.\n\n### Request Body Fields"
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n\t\"amount\": 2000\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits/:mandate_id",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits",
												":mandate_id"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "647dccf0-358f-4176-8f3c-1748fff31f69"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "369"
										},
										{
											"key": "ETag",
											"value": "W/\"171-ZztJaysFxL35G4ldtDmY7d2h7Cs\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:05:27 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"reference\": \"{{$randomPassword}}\",\n        \"amount\": {{$body 'amount'}},\n        \"status\": \"successful\",\n        \"mandateId\": \"{{$randomUUID}}\",\n        \"accountId\": \"{{$randomUUID}}\",\n        \"description\": null,\n        \"closeDate\": \"{{$isoTimestamp}}\",\n        \"id\": \"{{$randomUUID}}\",\n        \"charge\": \"0\",\n        \"createdAt\": \"{{$isoTimestamp}}\",\n        \"updatedAt\": \"{{$isoTimestamp}}\"\n    }\n}"
								},
								{
									"name": "insufficient_funds",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"No sufficient funds.\",\n    \"errorCode\": \"51\"\n}"
								},
								{
									"name": "mandate_not_found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Mandate not found\",\n    \"errorCode\": \"25\"\n}"
								},
								{
									"name": "mandate_not_active",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Mandate not active.\",\n}"
								}
							]
						},
						{
							"name": "Cancel a Direct Debit",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/direct-debits/:mandate_id/cancel",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"direct-debits",
										":mandate_id",
										"cancel"
									],
									"variable": [
										{
											"key": "mandate_id",
											"value": "776d41a5-18d5-4b57-9eb9-f47304b24a2d"
										}
									]
								},
								"description": "This endpoint is used to cancel a direct debit mandate. As a financial instrument, a direct debit mandate cannot be modified once set up."
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits/:mandate_id/cancel",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits",
												":mandate_id",
												"cancel"
											],
											"variable": [
												{
													"key": "mandate_id",
													"value": "647dccf0-358f-4176-8f3c-1748fff31f69"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "26"
										},
										{
											"key": "ETag",
											"value": "W/\"1a-pIPrt4esgEyEkX/w62Rnrj9XXdg\""
										},
										{
											"key": "Date",
											"value": "Tue, 24 Oct 2023 12:05:50 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"success\": true,\n    \"data\": {\n        \"status\": \"cancelled\"\n    }\n}"
								},
								{
									"name": "mandate_not_found",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Mandate not found\",\n    \"errorCode\": \"25\"\n}"
								},
								{
									"name": "mandate_already_cancelled",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "x-mock-match-request-body",
												"value": "false",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": \"Netflix\",\r\n    \"source_account\": \"7195722532\",\r\n    \"maximum_single_amount\": 10000,\r\n    \"maximum_cumulative_amount\": 100000,\r\n    \"maximum_transactions\": 10,\r\n    \"start_date\": \"2023-10-23\",\r\n    \"expiry_date\": \"2024-01-01\",\r\n    \"frequency\": \"monthly\",\r\n    \"beneficiary_name\": \"NGN\",\r\n    \"beneficiary_account_number\": \"0158918919\",\r\n    \"beneficiary_bank_code\": \"058\",\r\n    \"webhook\": \"https://merchantfeedback.example.com/status/ABCD12345678901234567890/\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/direct-debits",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"direct-debits"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "666"
										},
										{
											"key": "ETag",
											"value": "W/\"29a-d1F9lNC6mTKdsxnGcIZ7+ZYpE7Q\""
										},
										{
											"key": "Date",
											"value": "Mon, 23 Oct 2023 13:58:08 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Mandate has already been cancelled.\",\n}"
								}
							]
						}
					]
				},
				{
					"name": "Cards",
					"item": [
						{
							"name": "Create Card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"customer_id\": \"cus_8TEMHVY5moxIPI\",\r\n  \"currency\": \"NGN\",\r\n  \"card_holder_name\": \"Ado John Sule\",\r\n  \"card_type\": \"Mastercard\",\r\n  \"card_expiry\": {\r\n    \"month\": 8,\r\n    \"year\": 2025\r\n  },\r\n  \"card_address\": {\r\n    \"street\": \"456 Johnson Street\",\r\n    \"city\": \"Ilesa\",\r\n    \"state\": \"Ilesa West\",\r\n    \"country\": \"Nigeria\"\r\n  }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/card",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"card"
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"name": "Content-Type",
												"value": "application/json",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"customer_id\": \"cus_8TEMHVY5moxIPI\",\r\n    \"currency\": \"NGN\",\r\n    \"card_holder_name\": \"Ado John Sule\",\r\n    \"card_type\": \"Mastercard\",\r\n    \"card_expiry\": {\r\n        \"month\": 8,\r\n        \"year\": 2025\r\n    },\r\n    \"card_address\": {\r\n        \"street\": \"456 Johnson Street\",\r\n        \"city\": \"Ilesa\",\r\n        \"state\": \"Ilesa West\",\r\n        \"country\": \"Nigeria\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/card",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"card"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\r\n    \"status\": \"00\",\r\n    \"message\": \"The process was completed successully\",\r\n    \"data\": {\r\n        \"customer_id\": \"cus_8TEMHVY5moxIPI\",\r\n        \"account_number\": \"1234567890\",\r\n        \"currency\": \"NGN\",\r\n        \"card_holder_name\": \"Ado John Sule\",\r\n        \"card_type\": \"Debit\",\r\n        \"card_brand\": \"Mastercard\",\r\n        \"card_number\": \"4242********4242\",\r\n        \"card_cvv\": 123,\r\n        \"card_default_pin\": \"0000\",\r\n        \"card_token\": \"a826c48111504ff7b67817\",\r\n        \"card_expiry\": {\r\n            \"month\": 8,\r\n            \"year\": 2025\r\n        },\r\n        \"card_address\": {\r\n            \"street\": \"456 Johnson Street\",\r\n            \"city\": \"Badagry\",\r\n            \"state\": \"Lagos\",\r\n            \"country\": \"Nigeria\"\r\n        }\r\n    }\r\n}"
								}
							]
						},
						{
							"name": "Preauth Card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "card_not_found",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/cards/:card_id?action=pre-authorize",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"query": [
										{
											"key": "action",
											"value": "pre-authorize"
										}
									],
									"variable": [
										{
											"key": "card_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"00\",\n    \"message\": \"The process was completed successully\",\n    \"data\": {\n        \"reference\": \"3094298244\",\n        \"approval_code\": \"09\",\n        \"type\": \"preauth\",\n        \"amount\": \"1000.00\",\n        \"currency\": \"NGN\",\n        \"card_holder_name\": \"Ado John Sule\",\n        \"card_number\": \"4242********4242\",\n        \"card_token\": \"a826c48111504ff7b67817\",\n        \"card_type\": \"Visa\",\n        \"card_expiry\": {\n            \"month\": 8,\n            \"year\": 2025\n        },\n        \"transaction_time\": \"2019-01-02T19:58:47.1234567\"\n    }\n}"
								},
								{
									"name": "card_not_found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Card not found\",\n    \"errorCode\": \"56\"\n}"
								},
								{
									"name": "card_expired",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Card expired\",\n    \"errorCode\": \"54\"\n}"
								},
								{
									"name": "card_restricted",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Card restricted\",\n    \"errorCode\": \"62\"\n}"
								},
								{
									"name": "insufficient_funds",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"No sufficient funds.\",\n    \"errorCode\": \"51\"\n}"
								}
							]
						},
						{
							"name": "Void Card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"reference\": \"2806832\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/cards/:card_id?action=void",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"query": [
										{
											"key": "action",
											"value": "void"
										}
									],
									"variable": [
										{
											"key": "card_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reference\": \"2806832\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=void",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "void"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"00\",\n    \"message\": \"The process was completed successully\",\n    \"data\": {\n        \"reference\": \"2806832\",\n        \"customer_id\": \"CST1019\",\n        \"approval_code\": \"09\",\n        \"type\": \"preauth\",\n        \"amount\": \"1000.00\",\n        \"currency\": \"NGN\",\n        \"card_holder_name\": \"Ado John Sule\",\n        \"card_number\": \"4242********4242\",\n        \"card_token\": \"a826c48111504ff7b67817\",\n        \"card_type\": \"Visa\",\n        \"card_expiry\": {\n            \"month\": 8,\n            \"year\": 2025\n        },\n        \"transaction_time\": \"2019-01-02T19:58:47.1234567\"\n    }\n}"
								}
							]
						},
						{
							"name": "Capture card",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "insufficient_funds",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"reference\": \"2806832\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/cards/:card_id?action=capture",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"cards",
										":card_id"
									],
									"query": [
										{
											"key": "action",
											"value": "capture"
										}
									],
									"variable": [
										{
											"key": "card_id",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"reference\": \"2806832\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=void",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "void"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n  \"status\": \"00\",\n  \"message\": \"The process was completed successully\",\n  \"data\": {\n    \"reference\": \"2806832\",\n    \"customer_id\": \"CST1019\",\n    \"approval_code\": \"00\",\n    \"type\": \"preauth\",\n    \"amount\": \"1000.00\",\n    \"currency\": \"NGN\",\n    \"card_holder_name\": \"Ado John Sule\",\n    \"card_number\": \"4242********4242\",\n    \"card_token\": \"a826c48111504ff7b67817\",\n    \"card_type\": \"Visa\",\n    \"card_expiry\": {\n      \"month\": 8,\n      \"year\": 2025\n    },\n    \"transaction_time\": \"2019-01-02T19:58:47.1234567\"\n  }\n}\n"
								},
								{
									"name": "insufficient_funds",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"amount\": \"1000\",\r\n    \"currency\": \"NGN\",\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"No sufficient funds.\",\n    \"errorCode\": \"51\"\n}"
								}
							]
						},
						{
							"name": "Block or Unblock Card",
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "card_not_found",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_url}}/cards?action=block",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"cards"
									],
									"query": [
										{
											"key": "action",
											"value": "block"
										}
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards?action=block",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards"
											],
											"query": [
												{
													"key": "action",
													"value": "block"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"00\",\n    \"message\": \"The process was completed successully\",\n    \"data\": {\n        \"customer_id\": \"cus_8TEMHVY5moxIPI\",\n        \"currency\": \"NGN\",\n        \"card_holder_name\": \"Ado John Sule\",\n        \"card_type\": \"Mastercard\",\n        \"card_number\": \"4242********4242\",\n        \"card_cvv\": 100,\n        \"card_default_pin\": \"0000\",\n        \"card_token\": \"a826c48111504ff7b67817\",\n        \"card_expiry\": {\n            \"month\": 8,\n            \"year\": 2025\n        },\n        \"card_address\": {\n            \"street\": \"456 Johnson Street\",\n            \"city\": \"Ilesa\",\n            \"state\": \"Lagos State\",\n            \"country\": \"Nigeria\"\n        }\n    }\n}"
								},
								{
									"name": "card_not_found",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"card_token\": \"a826c48111504ff7b67817\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{base_url}}/cards/:card_id?action=pre-authorize",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards",
												":card_id"
											],
											"query": [
												{
													"key": "action",
													"value": "pre-authorize"
												}
											],
											"variable": [
												{
													"key": "card_id",
													"value": ""
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": 400,\n    \"success\": false,\n    \"timestamp\": \"{{$isoTimestamp}}\",\n    \"message\": \"Card not found\",\n    \"errorCode\": \"56\"\n}"
								}
							]
						},
						{
							"name": "Get Customer Cards",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-mock-response-name",
										"value": "success",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{Base_url}}/cards",
									"host": [
										"{{Base_url}}"
									],
									"path": [
										"cards"
									]
								}
							},
							"response": [
								{
									"name": "success",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{base_url}}/cards",
											"host": [
												"{{base_url}}"
											],
											"path": [
												"cards"
											]
										}
									},
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json",
											"name": "Content-Type",
											"description": "",
											"type": "text"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"00\",\n    \"message\": \"The process was completed successully\",\n    \"data\": [\n        {\n            \"customer_id\": \"cus_8TEMHVY5moxIPI\",\n            \"account_number\": \"1234567890\",\n            \"currency\": \"NGN\",\n            \"card_holder_name\": \"Ado John Sule\",\n            \"card_type\": \"Mastercard\",\n            \"card_number\": \"4242********4242\",\n            \"card_cvv\": 100,\n            \"card_default_pin\": \"0000\",\n            \"card_token\": \"a826c48111504ff7b67817\",\n            \"card_expiry\": {\n                \"month\": 8,\n                \"year\": 2025\n            },\n            \"card_address\": {\n                \"street\": \"456 Johnson Street\",\n                \"city\": \"Ilesa\",\n                \"state\": \"Lagos State\",\n                \"country\": \"Nigeria\"\n            }\n        }\n    ]\n}"
								}
							]
						}
					]
				},
				{
					"name": "New Folder",
					"item": [
						{
							"name": "Fund Transfer & BVN",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://3.15.13.197:8050/health",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "8050",
									"path": [
										"health"
									]
								}
							},
							"response": []
						},
						{
							"name": "Fineract CBA",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://3.15.13.197:8443/",
									"protocol": "https",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "8443",
									"path": [
										""
									]
								}
							},
							"response": []
						},
						{
							"name": "Direct Debit",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://3.15.13.197:4100/direct-debits",
									"protocol": "http",
									"host": [
										"3",
										"15",
										"13",
										"197"
									],
									"port": "4100",
									"path": [
										"direct-debits"
									]
								}
							},
							"response": []
						},
						{
							"name": "NIBSS in a box",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "x-api-key",
										"value": "PMAK-65378b259c93b50031b71ac5-ee559e437033028c7074e17a6edf231a26",
										"type": "text"
									}
								],
								"url": {
									"raw": "https://460a3bca-edb8-4609-af71-6d26d62e4681.mock.pstmn.io/health",
									"protocol": "https",
									"host": [
										"460a3bca-edb8-4609-af71-6d26d62e4681",
										"mock",
										"pstmn",
										"io"
									],
									"path": [
										"health"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Open Banking Gateway API",
			"item": [
				{
					"name": "Auth",
					"item": [
						{
							"name": "Sign Up",
							"item": [
								{
									"name": "Sign Up",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var jsonData = pm.response.json();\r",
													"pm.environment.set(\"email\", jsonData.data.email);\r",
													"\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Email is in a valid format\", function () {\r",
													"    pm.expect(jsonData.data.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@([\\w-]+\\.)+[a-zA-Z]{2,7}$/);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Phone number has a valid length\", function () {\r",
													"    pm.expect(jsonData.data.profile.phone).to.have.lengthOf.at.least(10);\r",
													"});\r",
													"\r",
													"pm.test(\"Phone number has a valid length\", function () {\r",
													"    pm.expect(jsonData.data.profile.phone).to.have.lengthOf.at.most(11);\r",
													"});\r",
													"\r",
													"pm.test(\"roleID should not be empty\", function () {\r",
													"    pm.expect(jsonData.data.roleId).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"ID should not be empty\", function () {\r",
													"    pm.expect(jsonData.data.id).to.not.be.empty;\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomFirstName}}-{{$randomLastName}}@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Duplicate account Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"A user with email 'test@test.com' already exists.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"confirmPassword is not strong enough\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password\",\r\n    \"confirmPassword\": \"Password\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Mismatched password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Passwords do not match.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test12@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#1\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Blank email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\",\r",
													"        \"email should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Blank first-name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Blank phone number field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"phone should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid phone number (alphabets)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"Invalid phone number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"sblfkjasnfdnk\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid phone number (<10 digits)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"Invalid phone number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"123456\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid phone number (>11 digits)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"Invalid phone number\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"123456789098\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Blank last-name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"lastName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid first-name(numbers)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"1254\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid last-name(numbers)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"1234\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid first-name(<2 characters)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"J\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Sign Up - Invalid last-name(<2 characters)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{$randomAlphaNumeric}}@mailinator.com\",\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"D\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/signup",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"signup"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password1#\",\r\n    \"firstName\": \"John\",\r\n    \"lastName\": \"Doe\",\r\n    \"country\": \"NGN\",\r\n    \"companyName\": \"NexusInc.\",\r\n    \"companyType\": \"BANK\",\r\n    \"companyRole\": \"SOFTWARE_ENGINEER\",\r\n    \"phone\": \"08123456789\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/signup",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"signup"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "290"
												},
												{
													"key": "ETag",
													"value": "W/\"122-0P2tqtdlFL3zj8z0eKVQh8ZISc0\""
												},
												{
													"key": "Date",
													"value": "Sun, 05 Nov 2023 23:57:24 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"test@test.com\",\n        \"companyId\": \"8d66b6f4-6578-4af8-becb-795cb6671e2a\",\n        \"profileId\": \"78d3364e-e14c-46c5-95e7-3ee5bbffae4d\",\n        \"id\": \"ce053cf9-b80e-4d34-9c90-679e1f4ce094\",\n        \"createdAt\": \"2023-11-05T23:57:24.254Z\",\n        \"updatedAt\": \"2023-11-05T23:57:24.254Z\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Login",
							"item": [
								{
									"name": "Login",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.environment.set(\"accesstoken\", jsonData.data);\r",
													"\r",
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Message is Successfully logged in\", function () {\r",
													"    pm.expect(jsonData.message).to.eql('Successfully logged in.');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\",\r\n    \"password\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/login",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"login"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "253"
												},
												{
													"key": "ETag",
													"value": "W/\"fd-YfXxAwndTgLG7U4TIbHjzZ3G/P0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:14:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successfully logged in.\",\n    \"data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlMDUzY2Y5LWI4MGUtNGQzNC05YzkwLTY3OWUxZjRjZTA5NCIsImlhdCI6MTY5OTI1ODQ2MywiZXhwIjoxNjk5MjU5MzYzfQ.nog_Fit6ViTxtNew2wCQ6A23AJeWbW2j93ggNPwCMyg\"\n}"
										}
									]
								},
								{
									"name": "Login - Blank email field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\",\r",
													"        \"email should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\",\r\n    \"password\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/login",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"login"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "253"
												},
												{
													"key": "ETag",
													"value": "W/\"fd-YfXxAwndTgLG7U4TIbHjzZ3G/P0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:14:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successfully logged in.\",\n    \"data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlMDUzY2Y5LWI4MGUtNGQzNC05YzkwLTY3OWUxZjRjZTA5NCIsImlhdCI6MTY5OTI1ODQ2MywiZXhwIjoxNjk5MjU5MzYzfQ.nog_Fit6ViTxtNew2wCQ6A23AJeWbW2j93ggNPwCMyg\"\n}"
										}
									]
								},
								{
									"name": "Login - Blank password field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"password should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/login",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"login"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "253"
												},
												{
													"key": "ETag",
													"value": "W/\"fd-YfXxAwndTgLG7U4TIbHjzZ3G/P0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:14:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successfully logged in.\",\n    \"data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlMDUzY2Y5LWI4MGUtNGQzNC05YzkwLTY3OWUxZjRjZTA5NCIsImlhdCI6MTY5OTI1ODQ2MywiZXhwIjoxNjk5MjU5MzYzfQ.nog_Fit6ViTxtNew2wCQ6A23AJeWbW2j93ggNPwCMyg\"\n}"
										}
									]
								},
								{
									"name": "Login - Incorrect email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@mailinator\",\r\n    \"password\": \"Password!123\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/login",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"login"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "253"
												},
												{
													"key": "ETag",
													"value": "W/\"fd-YfXxAwndTgLG7U4TIbHjzZ3G/P0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:14:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successfully logged in.\",\n    \"data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlMDUzY2Y5LWI4MGUtNGQzNC05YzkwLTY3OWUxZjRjZTA5NCIsImlhdCI6MTY5OTI1ODQ2MywiZXhwIjoxNjk5MjU5MzYzfQ.nog_Fit6ViTxtNew2wCQ6A23AJeWbW2j93ggNPwCMyg\"\n}"
										}
									]
								},
								{
									"name": "Login - Incorrect password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Invalid credentials.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"sammy@test.com\",\r\n    \"password\": \"Password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/login",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"login"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\",\r\n    \"password\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/login",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"login"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "253"
												},
												{
													"key": "ETag",
													"value": "W/\"fd-YfXxAwndTgLG7U4TIbHjzZ3G/P0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:14:23 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Successfully logged in.\",\n    \"data\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImNlMDUzY2Y5LWI4MGUtNGQzNC05YzkwLTY3OWUxZjRjZTA5NCIsImlhdCI6MTY5OTI1ODQ2MywiZXhwIjoxNjk5MjU5MzYzfQ.nog_Fit6ViTxtNew2wCQ6A23AJeWbW2j93ggNPwCMyg\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Forgot password",
							"item": [
								{
									"name": "Forgot Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Message is Reset password email sent to test@test.com\", function () {\r",
													"    pm.expect(jsonData.message).to.include('An email with instructions to reset your password has been sent to');\r",
													"});\r",
													"\r",
													"pm.environment.set(\"reset_token\", jsonData.data);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"{{email}}\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/forgot",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"forgot"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/forgot",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"forgot"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "125"
												},
												{
													"key": "ETag",
													"value": "W/\"7d-IcpCem+kyvOCbWNdCKQenxxrDi0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 00:35:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Reset password email sent to test@test.com\",\n    \"data\": \"19cb098fb02d2a9ae4256abc1ac970824cb105c6\"\n}"
										}
									]
								},
								{
									"name": "Forgot Password - Blank email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\",\r",
													"        \"email should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/forgot",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"forgot"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/forgot",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"forgot"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "125"
												},
												{
													"key": "ETag",
													"value": "W/\"7d-IcpCem+kyvOCbWNdCKQenxxrDi0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 00:35:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Reset password email sent to test@test.com\",\n    \"data\": \"19cb098fb02d2a9ae4256abc1ac970824cb105c6\"\n}"
										}
									]
								},
								{
									"name": "Forgot Password - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"email\": \"test@mailinator\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/forgot",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"forgot"
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"email\": \"test@test.com\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/forgot",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"forgot"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "125"
												},
												{
													"key": "ETag",
													"value": "W/\"7d-IcpCem+kyvOCbWNdCKQenxxrDi0\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 00:35:34 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Reset password email sent to test@test.com\",\n    \"data\": \"19cb098fb02d2a9ae4256abc1ac970824cb105c6\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Reset Password",
							"item": [
								{
									"name": "Reset Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql('Your password has been successfully reset. Please proceed to login.');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								},
								{
									"name": "Reset Password - Used token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Reset token is invalid or has expired.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								},
								{
									"name": "Reset Password - Same password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Reset token is invalid or has expired.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"Password1#\",\r\n    \"confirmPassword\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								},
								{
									"name": "Reset Password - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"password value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\",\r",
													"        \"confirmPassword value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"Password\",\r\n    \"confirmPassword\": \"Password\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								},
								{
									"name": "Reset Password - Mismatched Password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Passwords do not match.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"Password1#1\",\r\n    \"confirmPassword\": \"Password1#\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								},
								{
									"name": "Reset Password - Blank Password field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"password value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\",\r",
													"        \"password value is empty.\",\r",
													"        \"confirmPassword value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\",\r",
													"        \"confirmPassword value is empty.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"password\": \"\",\r\n    \"confirmPassword\": \"\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/password/reset/:resetToken",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"password",
												"reset",
												":resetToken"
											],
											"variable": [
												{
													"key": "resetToken",
													"value": "{{reset_token}}"
												}
											]
										}
									},
									"response": [
										{
											"name": "success",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"password\": \"Password123@\",\r\n    \"confirmPassword\": \"Password123@\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{base_url}}/auth/password/reset/:resetToken",
													"host": [
														"{{base_url}}"
													],
													"path": [
														"auth",
														"password",
														"reset",
														":resetToken"
													],
													"variable": [
														{
															"key": "resetToken",
															"value": "2643605d88ed0aaf92e642dff9324568a2e9248c"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "100"
												},
												{
													"key": "ETag",
													"value": "W/\"64-c3/uRIyp85K08xdAC5KGPS8hMww\""
												},
												{
													"key": "Date",
													"value": "Mon, 06 Nov 2023 08:12:35 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"Your password has been successfully reset. Please proceed to login.\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Roles",
					"item": [
						{
							"name": "Create role",
							"item": [
								{
									"name": "Create Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Secretary\",\n    \"description\": \"Book keeping\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Create Role",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Tester2\",\n    \"description\": \"Tester\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "272"
												},
												{
													"key": "ETag",
													"value": "W/\"110-IRJXqPAiBRCPqr4DK+J/0yxWzoY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:17:02 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"name\": \"Tester2\",\n        \"slug\": \"tester2\",\n        \"description\": \"Tester\",\n        \"status\": \"active\",\n        \"parentId\": null,\n        \"deletedAt\": null,\n        \"id\": \"e301a7f1-0edb-465f-a7fc-0f3cb9925910\",\n        \"createdAt\": \"2023-11-09T00:17:02.433Z\",\n        \"updatedAt\": \"2023-11-09T00:17:02.433Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create Role - Duplicate role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"A role with name 'QA' already exists.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"QA\",\n    \"description\": \"Quality Assurance\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Create Role",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Tester2\",\n    \"description\": \"Tester\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "272"
												},
												{
													"key": "ETag",
													"value": "W/\"110-IRJXqPAiBRCPqr4DK+J/0yxWzoY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:17:02 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"name\": \"Tester2\",\n        \"slug\": \"tester2\",\n        \"description\": \"Tester\",\n        \"status\": \"active\",\n        \"parentId\": null,\n        \"deletedAt\": null,\n        \"id\": \"e301a7f1-0edb-465f-a7fc-0f3cb9925910\",\n        \"createdAt\": \"2023-11-09T00:17:02.433Z\",\n        \"updatedAt\": \"2023-11-09T00:17:02.433Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create Role - Blank description",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"description should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"QA\",\n    \"description\": \"\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Create Role",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Tester2\",\n    \"description\": \"Tester\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "272"
												},
												{
													"key": "ETag",
													"value": "W/\"110-IRJXqPAiBRCPqr4DK+J/0yxWzoY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:17:02 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"name\": \"Tester2\",\n        \"slug\": \"tester2\",\n        \"description\": \"Tester\",\n        \"status\": \"active\",\n        \"parentId\": null,\n        \"deletedAt\": null,\n        \"id\": \"e301a7f1-0edb-465f-a7fc-0f3cb9925910\",\n        \"createdAt\": \"2023-11-09T00:17:02.433Z\",\n        \"updatedAt\": \"2023-11-09T00:17:02.433Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create Role - Blank name field",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"name should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"\",\n    \"description\": \"Quality Assurance\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "Create Role",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"name\": \"Tester2\",\n    \"description\": \"Tester\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "272"
												},
												{
													"key": "ETag",
													"value": "W/\"110-IRJXqPAiBRCPqr4DK+J/0yxWzoY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:17:02 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"name\": \"Tester2\",\n        \"slug\": \"tester2\",\n        \"description\": \"Tester\",\n        \"status\": \"active\",\n        \"parentId\": null,\n        \"deletedAt\": null,\n        \"id\": \"e301a7f1-0edb-465f-a7fc-0f3cb9925910\",\n        \"createdAt\": \"2023-11-09T00:17:02.433Z\",\n        \"updatedAt\": \"2023-11-09T00:17:02.433Z\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "View all roles",
							"item": [
								{
									"name": "List Roles",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "List Roles",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "565"
												},
												{
													"key": "ETag",
													"value": "W/\"235-kG3bim0bFQc9jgKPYPua+lLqG08\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:26:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n            \"name\": \"QA\",\n            \"slug\": \"qa\",\n            \"description\": \"Quality Assurance\",\n            \"status\": \"active\",\n            \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n            \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n            \"updatedAt\": \"2023-11-09T00:25:08.246Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"name\": \"admin\",\n            \"slug\": \"admin\",\n            \"description\": \"\",\n            \"status\": \"active\",\n            \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n            \"createdAt\": \"2023-11-08T12:34:10.608Z\",\n            \"updatedAt\": \"2023-11-08T12:34:10.608Z\",\n            \"deletedAt\": null\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List Roles - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles"
											]
										}
									},
									"response": [
										{
											"name": "List Roles",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "565"
												},
												{
													"key": "ETag",
													"value": "W/\"235-kG3bim0bFQc9jgKPYPua+lLqG08\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:26:05 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n            \"name\": \"QA\",\n            \"slug\": \"qa\",\n            \"description\": \"Quality Assurance\",\n            \"status\": \"active\",\n            \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n            \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n            \"updatedAt\": \"2023-11-09T00:25:08.246Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"name\": \"admin\",\n            \"slug\": \"admin\",\n            \"description\": \"\",\n            \"status\": \"active\",\n            \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n            \"createdAt\": \"2023-11-08T12:34:10.608Z\",\n            \"updatedAt\": \"2023-11-08T12:34:10.608Z\",\n            \"deletedAt\": null\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Update role",
							"item": [
								{
									"name": "Update Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "308"
												},
												{
													"key": "ETag",
													"value": "W/\"134-IWbkiZdtgRWq1uNrxSF6DOEqNgY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:36:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n        \"name\": \"QA\",\n        \"slug\": \"qa\",\n        \"description\": \"Quality Assurances\",\n        \"status\": \"active\",\n        \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n        \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n        \"updatedAt\": \"2023-11-09T00:36:48.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Role - Blank description",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"description should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "308"
												},
												{
													"key": "ETag",
													"value": "W/\"134-IWbkiZdtgRWq1uNrxSF6DOEqNgY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:36:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n        \"name\": \"QA\",\n        \"slug\": \"qa\",\n        \"description\": \"Quality Assurances\",\n        \"status\": \"active\",\n        \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n        \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n        \"updatedAt\": \"2023-11-09T00:36:48.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Role Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"status should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "308"
												},
												{
													"key": "ETag",
													"value": "W/\"134-IWbkiZdtgRWq1uNrxSF6DOEqNgY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:36:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n        \"name\": \"QA\",\n        \"slug\": \"qa\",\n        \"description\": \"Quality Assurances\",\n        \"status\": \"active\",\n        \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n        \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n        \"updatedAt\": \"2023-11-09T00:36:48.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Role - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "Update Role",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"description\": \"Quality Assurances\",\n    \"status\": \"active\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "308"
												},
												{
													"key": "ETag",
													"value": "W/\"134-IWbkiZdtgRWq1uNrxSF6DOEqNgY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:36:49 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"396de57f-cc20-484d-b365-fcf126cfab66\",\n        \"name\": \"QA\",\n        \"slug\": \"qa\",\n        \"description\": \"Quality Assurances\",\n        \"status\": \"active\",\n        \"parentId\": \"167ad7c2-54fb-43de-a711-ae65a4529352\",\n        \"createdAt\": \"2023-11-09T00:25:08.246Z\",\n        \"updatedAt\": \"2023-11-09T00:36:48.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Delete role",
							"item": [
								{
									"name": "Delete Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.null;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b646b830-2e2f-4da4-a668-06f6ef2b173a"
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete Role",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "ETag",
													"value": "W/\"2d-YKQEUO5fwD18lu03+kZeJLSTNR0\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:38:59 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": null\n}"
										}
									]
								},
								{
									"name": "Delete Role - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "b646b830-2e2f-4da4-a668-06f6ef2b173a"
												}
											]
										}
									},
									"response": [
										{
											"name": "Delete Role",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "396de57f-cc20-484d-b365-fcf126cfab66"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "45"
												},
												{
													"key": "ETag",
													"value": "W/\"2d-YKQEUO5fwD18lu03+kZeJLSTNR0\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:38:59 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": null\n}"
										}
									]
								}
							]
						},
						{
							"name": "View all permissions",
							"item": [
								{
									"name": "List Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												"permissions"
											]
										}
									},
									"response": [
										{
											"name": "List Permissions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														"permissions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5508"
												},
												{
													"key": "ETag",
													"value": "W/\"1584-PB1O5uoW0YBVm5vJfuR1weDV/68\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:47:59 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"18635ef8-02ad-442d-a1f4-ee0484a8e580\",\n            \"name\": \"view api call\",\n            \"slug\": \"view-api-call\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"1a61ab7f-8902-4ec6-9e09-aae0c5ce76db\",\n            \"name\": \"create role\",\n            \"slug\": \"create-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"202588b7-220c-4851-837b-05ef04840082\",\n            \"name\": \"view report\",\n            \"slug\": \"view-report\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"27edee70-38e1-4780-880d-b7993ad53baf\",\n            \"name\": \"list consents\",\n            \"slug\": \"list-consents\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"4d091218-a678-460d-8f9b-5f84816534a0\",\n            \"name\": \"update api consumer\",\n            \"slug\": \"update-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"5b79b832-fa30-4404-9fdf-ac0386559f4b\",\n            \"name\": \"add team member\",\n            \"slug\": \"add-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"5e1639b9-5a8d-491a-b1bd-00591350c037\",\n            \"name\": \"deactivate role\",\n            \"slug\": \"deactivate-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"695c969e-e3a4-410f-a21d-6fe41498ccc9\",\n            \"name\": \"deactivate api consumer\",\n            \"slug\": \"deactivate-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"6a9c2d71-fc6a-41d9-b63a-eb3352808e5d\",\n            \"name\": \"view consent\",\n            \"slug\": \"view-consent\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"6c3cac7c-c070-44b8-94df-8f47e16d2b2d\",\n            \"name\": \"list api consumers\",\n            \"slug\": \"list-api-consumers\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"77e79c6a-227e-451d-a35f-da05447c890b\",\n            \"name\": \"view api consumer\",\n            \"slug\": \"view-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"8412baf3-ca21-46d8-adc3-a434da5e7544\",\n            \"name\": \"list team members\",\n            \"slug\": \"list-team-members\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"96c0d1ca-fbc3-4260-a0a9-ef3fe99e13cf\",\n            \"name\": \"list reports\",\n            \"slug\": \"list-reports\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"9af0b993-c103-4b00-a566-c3bd0da3f761\",\n            \"name\": \"activate api consumer\",\n            \"slug\": \"activate-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"9bac2d86-b2dc-4da0-aebd-7519c40f55c4\",\n            \"name\": \"list roles\",\n            \"slug\": \"list-roles\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"a16e3b04-141b-4657-ad5e-aac01d1f1e43\",\n            \"name\": \"deactivate team member\",\n            \"slug\": \"deactivate-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"b983325f-d7b8-4d70-afbc-55d3cbdee07a\",\n            \"name\": \"list api activities\",\n            \"slug\": \"list-api-activities\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"c4d29fcc-988b-46f6-a0bc-0e8c2b1f23e4\",\n            \"name\": \"list audit logs\",\n            \"slug\": \"list-audit-logs\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"c7172759-697c-4e41-8073-55b176b9fe18\",\n            \"name\": \"activate team member\",\n            \"slug\": \"activate-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d2f30441-d358-47be-bb50-ae6adf7ab5c7\",\n            \"name\": \"activate role\",\n            \"slug\": \"activate-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d978c314-ccd9-4f1c-8976-bd9ec5267638\",\n            \"name\": \"update team member\",\n            \"slug\": \"update-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d9e8a0b8-e463-4b6a-af92-54a1701f29e6\",\n            \"name\": \"list system settings\",\n            \"slug\": \"list-system-settings\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"e7840815-cb0b-4dba-98fd-e57018dd622b\",\n            \"name\": \"update system setting\",\n            \"slug\": \"update-system-setting\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n            \"name\": \"update role\",\n            \"slug\": \"update-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"ed710e35-7c35-4510-ba83-5cef3421d20f\",\n            \"name\": \"list api calls\",\n            \"slug\": \"list-api-calls\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n            \"name\": \"view system setting\",\n            \"slug\": \"view-system-setting\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List Permissions - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												"permissions"
											]
										}
									},
									"response": [
										{
											"name": "List Permissions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														"permissions"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "5508"
												},
												{
													"key": "ETag",
													"value": "W/\"1584-PB1O5uoW0YBVm5vJfuR1weDV/68\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 00:47:59 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"18635ef8-02ad-442d-a1f4-ee0484a8e580\",\n            \"name\": \"view api call\",\n            \"slug\": \"view-api-call\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"1a61ab7f-8902-4ec6-9e09-aae0c5ce76db\",\n            \"name\": \"create role\",\n            \"slug\": \"create-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"202588b7-220c-4851-837b-05ef04840082\",\n            \"name\": \"view report\",\n            \"slug\": \"view-report\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"27edee70-38e1-4780-880d-b7993ad53baf\",\n            \"name\": \"list consents\",\n            \"slug\": \"list-consents\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"4d091218-a678-460d-8f9b-5f84816534a0\",\n            \"name\": \"update api consumer\",\n            \"slug\": \"update-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"5b79b832-fa30-4404-9fdf-ac0386559f4b\",\n            \"name\": \"add team member\",\n            \"slug\": \"add-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"5e1639b9-5a8d-491a-b1bd-00591350c037\",\n            \"name\": \"deactivate role\",\n            \"slug\": \"deactivate-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"695c969e-e3a4-410f-a21d-6fe41498ccc9\",\n            \"name\": \"deactivate api consumer\",\n            \"slug\": \"deactivate-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"6a9c2d71-fc6a-41d9-b63a-eb3352808e5d\",\n            \"name\": \"view consent\",\n            \"slug\": \"view-consent\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"6c3cac7c-c070-44b8-94df-8f47e16d2b2d\",\n            \"name\": \"list api consumers\",\n            \"slug\": \"list-api-consumers\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"77e79c6a-227e-451d-a35f-da05447c890b\",\n            \"name\": \"view api consumer\",\n            \"slug\": \"view-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"8412baf3-ca21-46d8-adc3-a434da5e7544\",\n            \"name\": \"list team members\",\n            \"slug\": \"list-team-members\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"96c0d1ca-fbc3-4260-a0a9-ef3fe99e13cf\",\n            \"name\": \"list reports\",\n            \"slug\": \"list-reports\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"9af0b993-c103-4b00-a566-c3bd0da3f761\",\n            \"name\": \"activate api consumer\",\n            \"slug\": \"activate-api-consumer\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"9bac2d86-b2dc-4da0-aebd-7519c40f55c4\",\n            \"name\": \"list roles\",\n            \"slug\": \"list-roles\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"a16e3b04-141b-4657-ad5e-aac01d1f1e43\",\n            \"name\": \"deactivate team member\",\n            \"slug\": \"deactivate-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"b983325f-d7b8-4d70-afbc-55d3cbdee07a\",\n            \"name\": \"list api activities\",\n            \"slug\": \"list-api-activities\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"c4d29fcc-988b-46f6-a0bc-0e8c2b1f23e4\",\n            \"name\": \"list audit logs\",\n            \"slug\": \"list-audit-logs\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"c7172759-697c-4e41-8073-55b176b9fe18\",\n            \"name\": \"activate team member\",\n            \"slug\": \"activate-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d2f30441-d358-47be-bb50-ae6adf7ab5c7\",\n            \"name\": \"activate role\",\n            \"slug\": \"activate-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d978c314-ccd9-4f1c-8976-bd9ec5267638\",\n            \"name\": \"update team member\",\n            \"slug\": \"update-team-member\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"d9e8a0b8-e463-4b6a-af92-54a1701f29e6\",\n            \"name\": \"list system settings\",\n            \"slug\": \"list-system-settings\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"e7840815-cb0b-4dba-98fd-e57018dd622b\",\n            \"name\": \"update system setting\",\n            \"slug\": \"update-system-setting\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n            \"name\": \"update role\",\n            \"slug\": \"update-role\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"ed710e35-7c35-4510-ba83-5cef3421d20f\",\n            \"name\": \"list api calls\",\n            \"slug\": \"list-api-calls\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        },\n        {\n            \"id\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n            \"name\": \"view system setting\",\n            \"slug\": \"view-system-setting\",\n            \"description\": \"\",\n            \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n            \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n            \"deletedAt\": null\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "View all role permissions",
							"item": [
								{
									"name": "List Role Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.data).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "List Role Permissions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "970"
												},
												{
													"key": "ETag",
													"value": "W/\"3ca-ZOJeBuGbostvITbJYyjDhupx1js\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:07:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"316532e6-5102-4dff-9e55-07c36c50fcb9\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n            \"createdAt\": \"2023-11-09T01:06:31.180Z\",\n            \"updatedAt\": \"2023-11-09T01:06:31.180Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n                \"name\": \"update role\",\n                \"slug\": \"update-role\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        },\n        {\n            \"id\": \"9b17c0a3-1980-408d-b275-8fa168a5cd86\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n            \"createdAt\": \"2023-11-09T01:06:04.238Z\",\n            \"updatedAt\": \"2023-11-09T01:06:04.238Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n                \"name\": \"view system setting\",\n                \"slug\": \"view-system-setting\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List Role Permissions - Invalid id",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql('Role not found.');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "8e358839-931b-4758-8e50-"
												}
											]
										}
									},
									"response": [
										{
											"name": "List Role Permissions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "970"
												},
												{
													"key": "ETag",
													"value": "W/\"3ca-ZOJeBuGbostvITbJYyjDhupx1js\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:07:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"316532e6-5102-4dff-9e55-07c36c50fcb9\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n            \"createdAt\": \"2023-11-09T01:06:31.180Z\",\n            \"updatedAt\": \"2023-11-09T01:06:31.180Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n                \"name\": \"update role\",\n                \"slug\": \"update-role\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        },\n        {\n            \"id\": \"9b17c0a3-1980-408d-b275-8fa168a5cd86\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n            \"createdAt\": \"2023-11-09T01:06:04.238Z\",\n            \"updatedAt\": \"2023-11-09T01:06:04.238Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n                \"name\": \"view system setting\",\n                \"slug\": \"view-system-setting\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List Role Permissions - Invalid id Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "8e358839-931b-4758-8e50-2001443b0f6b"
												}
											]
										}
									},
									"response": [
										{
											"name": "List Role Permissions",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "970"
												},
												{
													"key": "ETag",
													"value": "W/\"3ca-ZOJeBuGbostvITbJYyjDhupx1js\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:07:17 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"316532e6-5102-4dff-9e55-07c36c50fcb9\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n            \"createdAt\": \"2023-11-09T01:06:31.180Z\",\n            \"updatedAt\": \"2023-11-09T01:06:31.180Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"ea901e57-b052-4441-87c2-5a9381455679\",\n                \"name\": \"update role\",\n                \"slug\": \"update-role\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        },\n        {\n            \"id\": \"9b17c0a3-1980-408d-b275-8fa168a5cd86\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"permissionId\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n            \"createdAt\": \"2023-11-09T01:06:04.238Z\",\n            \"updatedAt\": \"2023-11-09T01:06:04.238Z\",\n            \"deletedAt\": null,\n            \"permission\": {\n                \"id\": \"f3ec6e65-b395-4707-b220-f9e5d10b8844\",\n                \"name\": \"view system setting\",\n                \"slug\": \"view-system-setting\",\n                \"description\": \"\",\n                \"createdAt\": \"2023-11-08T12:31:24.874Z\",\n                \"updatedAt\": \"2023-11-08T12:31:24.874Z\",\n                \"deletedAt\": null\n            }\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Set role permissions",
							"item": [
								{
									"name": "Set Role Permissions",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\"0cf933fd-b30c-4ec1-ab8c-8ec580c1d45a\", \"151786aa-b5d2-47f7-a628-9c2da83a6b5c\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
												}
											]
										}
									},
									"response": [
										{
											"name": "Set Role Permissions",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "33"
												},
												{
													"key": "ETag",
													"value": "W/\"21-rviECQGpXM1UQBYWaDAF6U52NIM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:06:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\"\n}"
										}
									]
								},
								{
									"name": "Set Role Permissions - Invalid ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql('Role not found.');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\"0cf933fd-b30c-4ec1-ab8c-8ec580c1d45a\", \"151786aa-b5d2-47f7-a628-9c2da83a6b5c\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "5f581591"
												}
											]
										}
									},
									"response": [
										{
											"name": "Set Role Permissions",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "33"
												},
												{
													"key": "ETag",
													"value": "W/\"21-rviECQGpXM1UQBYWaDAF6U52NIM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:06:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\"\n}"
										}
									]
								},
								{
									"name": "Set Role Permissions - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
												}
											]
										}
									},
									"response": [
										{
											"name": "Set Role Permissions",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "33"
												},
												{
													"key": "ETag",
													"value": "W/\"21-rviECQGpXM1UQBYWaDAF6U52NIM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:06:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\"\n}"
										}
									]
								},
								{
									"name": "Set Role Permissions - Duplicate permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"f3ec6e65-b395-4707-b220-f9e5d10b8844\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "948d702a-e15a-4a48-b3a6-823a357e4a31"
												}
											]
										}
									},
									"response": [
										{
											"name": "Set Role Permissions",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "33"
												},
												{
													"key": "ETag",
													"value": "W/\"21-rviECQGpXM1UQBYWaDAF6U52NIM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:06:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\"\n}"
										}
									]
								},
								{
									"name": "Set Role Permissions - Blank permission",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"permissions\": [\"\", \"\"]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/roles/:id/permissions",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"roles",
												":id",
												"permissions"
											],
											"variable": [
												{
													"key": "id",
													"value": "96fe1bfe-ee3f-4c71-982e-c5954a209c9c"
												}
											]
										}
									},
									"response": [
										{
											"name": "Set Role Permissions",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"permissions\": [\"f3ec6e65-b395-4707-b220-f9e5d10b8844\", \"ea901e57-b052-4441-87c2-5a9381455679\"]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/roles/:id/permissions",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"roles",
														":id",
														"permissions"
													],
													"variable": [
														{
															"key": "id",
															"value": "efdcfa14-1e5a-4b03-92fa-a0cc12e1addc"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "33"
												},
												{
													"key": "ETag",
													"value": "W/\"21-rviECQGpXM1UQBYWaDAF6U52NIM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 01:06:31 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Users",
					"item": [
						{
							"name": "Create user",
							"item": [
								{
									"name": "Create User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 201\", function () {\r",
													"    pm.response.to.have.status(201);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Created\", function () {\r",
													"    pm.response.to.have.status('Created');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice15@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"5f581591-92fd-479f-80bd-1f9c8c60859d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Blank firstname",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"firstName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice1@mailinator.com\",\n    \"firstName\": \"\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"5f581591-92fd-479f-80bd-1f9c8c60859d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Blank lastname",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"lastName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice1@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"\",\n    \"roleId\": \"5f581591-92fd-479f-80bd-1f9c8c60859d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Blank role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"roleId should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice1@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Invalid role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Role not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice3@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"hdkbfhbskdjks\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Invalid name",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"lastName should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice2@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"123\",\n    \"roleId\": \"5f581591-92fd-479f-80bd-1f9c8c60859d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Duplicate user",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.contain(\"already exists\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"eunice1@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"5f581591-92fd-479f-80bd-1f9c8c60859d\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								},
								{
									"name": "Create User - Blank email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('array');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message[0]).to.eql(\"email must be an email\",\r",
													"        \"email should not be empty\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "Create User",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "685"
												},
												{
													"key": "ETag",
													"value": "W/\"2ad-bHpT5oUCqNP9aPzSVdrTcOgxeA8\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:15:44 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"profile\": {\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"phone\": null,\n            \"country\": null,\n            \"deletedAt\": null,\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\"\n        },\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"deletedAt\": null,\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\"\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Setup Account",
							"item": [
								{
									"name": "Setup Account",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Wandy\",\n    \"lastName\": \"Wush\",\n    \"password\": \"Password#1\",\n    \"confirmPassword\": \"Password#1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "19053dca0b0f3d4737c139f3bfad01442996461e"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Used Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Wandy\",\n    \"lastName\": \"Wush\",\n    \"password\": \"Password#1\",\n    \"confirmPassword\": \"Password#1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "c98db0054e15b8fe2c9d79a97fc544661bd5db19"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"User not found.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Wandy\",\n    \"lastName\": \"Wush\",\n    \"password\": \"Password#1\",\n    \"confirmPassword\": \"Password#1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "c98db0054e15b8fe2c9d79"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Password complexity",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data is present\", function () {\r",
													"    pm.expect(jsonData.data.password).to.eql(\"password value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\");\r",
													"    pm.expect(jsonData.data.confirmPassword).to.eql(\"confirmPassword value must contain at least 1 number, 1 special character, 1 uppercase and 1 lowercase letter and be at least 8 characters in length.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Wandy\",\n    \"lastName\": \"Wush\",\n    \"password\": \"Pas#1\",\n    \"confirmPassword\": \"Pas#1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "089bca102866dda258f951b4a782b25ff93673c4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Password complexity Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Passwords do not match.\");\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Wandy\",\n    \"lastName\": \"Wush\",\n    \"password\": \"Password1#1\",\n    \"confirmPassword\": \"Password#1\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "089bca102866dda258f951b4a782b25ff93673c4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Blank fields",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data is present\", function () {\r",
													"    pm.expect(jsonData.data.firstName).to.eql(\"firstName is required.\");\r",
													"    pm.expect(jsonData.data.lastName).to.eql(\"lastName is required.\");\r",
													"    pm.expect(jsonData.data.password).to.eql(\"password is required.\");\r",
													"    pm.expect(jsonData.data.confirmPassword).to.eql(\"confirmPassword is required.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "089bca102866dda258f951b4a782b25ff93673c4"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "Setup Account - Blank fields Copy",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Bad Request\", function () {\r",
													"    pm.response.to.have.status('Bad Request');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.an('string');\r",
													"    pm.expect(jsonData.data).to.be.an('object');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 400\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"Validation Error.\");\r",
													"});\r",
													"\r",
													"pm.test(\"Data is present\", function () {\r",
													"    pm.expect(jsonData.data.firstName).to.eql(\"firstName is required.\");\r",
													"    pm.expect(jsonData.data.lastName).to.eql(\"lastName is required.\");\r",
													"    pm.expect(jsonData.data.password).to.eql(\"password is required.\");\r",
													"    pm.expect(jsonData.data.confirmPassword).to.eql(\"confirmPassword is required.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"\",\n    \"password\": \"\",\n    \"confirmPassword\": \"\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/auth/setup/:token",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"auth",
												"setup",
												":token"
											],
											"variable": [
												{
													"key": "token",
													"value": "089bca102866dda258f951b4a782b25ff93673c4"
												}
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "View all users",
							"item": [
								{
									"name": "List Users",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "List Users",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1446"
												},
												{
													"key": "ETag",
													"value": "W/\"5a6-653rCt4Ht3E6W4YsWbaUlu/v3tM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:16:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"email\": \"adewunmiakinsanya@gmail.com\",\n            \"password\": \"\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n            \"resetPasswordToken\": null,\n            \"resetPasswordExpires\": null,\n            \"lastPasswordChange\": null,\n            \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.331Z\",\n            \"deletedAt\": null,\n            \"profile\": {\n                \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n                \"firstName\": \"Adewunmi\",\n                \"lastName\": \"Akinsanya\",\n                \"companyRole\": \"SOFTWARE_ENGINEER\",\n                \"phone\": null,\n                \"country\": null,\n                \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n                \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n                \"updatedAt\": \"2023-11-09T14:15:44.347Z\",\n                \"deletedAt\": null\n            }\n        },\n        {\n            \"id\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n            \"email\": \"test@test.com\",\n            \"password\": \"$2b$12$GlpfINLtYyZC7IVHnt2L..Mdw7Nr0KPcjQ500qBL/wqzIjnlsTG3O\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n            \"resetPasswordToken\": null,\n            \"resetPasswordExpires\": null,\n            \"lastPasswordChange\": null,\n            \"createdAt\": \"2023-11-09T00:24:26.059Z\",\n            \"updatedAt\": \"2023-11-09T00:24:26.059Z\",\n            \"deletedAt\": null,\n            \"profile\": {\n                \"id\": \"e824e3a7-f1a6-44d6-bcf4-61fbe2700754\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"companyRole\": \"SOFTWARE_ENGINEER\",\n                \"phone\": \"08123456789\",\n                \"country\": \"NGN\",\n                \"userId\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n                \"createdAt\": \"2023-11-09T00:24:26.064Z\",\n                \"updatedAt\": \"2023-11-09T00:24:26.064Z\",\n                \"deletedAt\": null\n            }\n        }\n    ]\n}"
										}
									]
								},
								{
									"name": "List Users - No access",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is Unauthorized\", function () {\r",
													"    pm.response.to.have.status('Unauthorized');\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body properties\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.timestamp).to.be.a('string');\r",
													"    pm.expect(jsonData.status).to.be.a('number');\r",
													"    pm.expect(jsonData.success).to.be.a('boolean');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"    pm.expect(jsonData.stack).to.be.an('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Time stamp is not empty\", function () {\r",
													"    pm.expect(jsonData.timestamp).to.not.be.empty;\r",
													"});\r",
													"\r",
													"pm.test(\"Status is 401\", function () {\r",
													"    pm.expect(jsonData.status).to.eql(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Success is false\", function () {\r",
													"    pm.expect(jsonData.success).to.eql(false);\r",
													"});\r",
													"\r",
													"pm.test(\"Message is present\", function () {\r",
													"    pm.expect(jsonData.message).to.eql(\"You must provide an access token to access this resource.\");\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "noauth"
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/users",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users"
											]
										}
									},
									"response": [
										{
											"name": "List Users",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/users",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "1446"
												},
												{
													"key": "ETag",
													"value": "W/\"5a6-653rCt4Ht3E6W4YsWbaUlu/v3tM\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:16:27 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"email\": \"adewunmiakinsanya@gmail.com\",\n            \"password\": \"\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n            \"resetPasswordToken\": null,\n            \"resetPasswordExpires\": null,\n            \"lastPasswordChange\": null,\n            \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.331Z\",\n            \"deletedAt\": null,\n            \"profile\": {\n                \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n                \"firstName\": \"Adewunmi\",\n                \"lastName\": \"Akinsanya\",\n                \"companyRole\": \"SOFTWARE_ENGINEER\",\n                \"phone\": null,\n                \"country\": null,\n                \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n                \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n                \"updatedAt\": \"2023-11-09T14:15:44.347Z\",\n                \"deletedAt\": null\n            }\n        },\n        {\n            \"id\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n            \"email\": \"test@test.com\",\n            \"password\": \"$2b$12$GlpfINLtYyZC7IVHnt2L..Mdw7Nr0KPcjQ500qBL/wqzIjnlsTG3O\",\n            \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n            \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n            \"resetPasswordToken\": null,\n            \"resetPasswordExpires\": null,\n            \"lastPasswordChange\": null,\n            \"createdAt\": \"2023-11-09T00:24:26.059Z\",\n            \"updatedAt\": \"2023-11-09T00:24:26.059Z\",\n            \"deletedAt\": null,\n            \"profile\": {\n                \"id\": \"e824e3a7-f1a6-44d6-bcf4-61fbe2700754\",\n                \"firstName\": \"John\",\n                \"lastName\": \"Doe\",\n                \"companyRole\": \"SOFTWARE_ENGINEER\",\n                \"phone\": \"08123456789\",\n                \"country\": \"NGN\",\n                \"userId\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n                \"createdAt\": \"2023-11-09T00:24:26.064Z\",\n                \"updatedAt\": \"2023-11-09T00:24:26.064Z\",\n                \"deletedAt\": null\n            }\n        }\n    ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "Get a user",
							"item": [
								{
									"name": "Get User",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status(\"OK\");\r",
													"});\r",
													"\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an(\"object\");\r",
													"    pm.expect(jsonData.status).to.be.an(\"string\");\r",
													"    pm.expect(jsonData.message).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.data).to.be.an(\"object\");\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});\r",
													""
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/users/:id",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "4900914d-63a6-4a5c-89cd-06bd4404d4d6"
												}
											]
										}
									},
									"response": [
										{
											"name": "Get User",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/users/:id",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"users",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": "06de64e8-62ba-4c34-8a43-33fb4e299fd8"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "719"
												},
												{
													"key": "ETag",
													"value": "W/\"2cf-mZJNIojPDudnmZ7nd53bTBPVxoA\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 14:16:56 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n        \"email\": \"adewunmiakinsanya@gmail.com\",\n        \"password\": \"\",\n        \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\",\n        \"companyId\": \"1dec0487-ae37-41ba-a662-a37062fc0c70\",\n        \"resetPasswordToken\": null,\n        \"resetPasswordExpires\": null,\n        \"lastPasswordChange\": null,\n        \"createdAt\": \"2023-11-09T14:15:44.331Z\",\n        \"updatedAt\": \"2023-11-09T14:15:44.331Z\",\n        \"deletedAt\": null,\n        \"profile\": {\n            \"id\": \"51cb0546-a867-4089-8077-dbbabfa64a19\",\n            \"firstName\": \"Adewunmi\",\n            \"lastName\": \"Akinsanya\",\n            \"companyRole\": \"SOFTWARE_ENGINEER\",\n            \"phone\": null,\n            \"country\": null,\n            \"userId\": \"06de64e8-62ba-4c34-8a43-33fb4e299fd8\",\n            \"createdAt\": \"2023-11-09T14:15:44.347Z\",\n            \"updatedAt\": \"2023-11-09T14:15:44.347Z\",\n            \"deletedAt\": null\n        }\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Update User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"eunice1@mailinator.com\",\n    \"firstName\": \"Eunice\",\n    \"lastName\": \"Okokon\",\n    \"roleId\": \"b646b830-2e2f-4da4-a668-06f6ef2b173a\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/users/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "5f581591-92fd-479f-80bd-1f9c8c60859d"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Delete User",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.null;\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/users/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "06de64e8-62ba-4c34-8a43-33fb4e299fd8"
										}
									]
								}
							},
							"response": [
								{
									"name": "Delete User",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"email\": \"adewunmiakinsanya@gmail.com\",\n    \"firstName\": \"Adewunmi\",\n    \"lastName\": \"Akinsanya\",\n    \"roleId\": \"efdcfa14-1e5a-4b03-92fa-a0cc12e1addc\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_url}}/users/:id",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"users",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "06de64e8-62ba-4c34-8a43-33fb4e299fd8"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "45"
										},
										{
											"key": "ETag",
											"value": "W/\"2d-YKQEUO5fwD18lu03+kZeJLSTNR0\""
										},
										{
											"key": "Date",
											"value": "Thu, 09 Nov 2023 14:22:24 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": null\n}"
								}
							]
						}
					]
				},
				{
					"name": "Profile",
					"item": [
						{
							"name": "Get Profile",
							"item": [
								{
									"name": "Get Profile",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Status code response is OK\", function () {\r",
													"    pm.response.to.have.status('OK');\r",
													"});\r",
													"\r",
													"var jsonData = pm.response.json();\r",
													"\r",
													"pm.test(\"Response body property\", function () {\r",
													"    pm.expect(jsonData).to.be.an('object');\r",
													"    pm.expect(jsonData.status).to.be.a('string');\r",
													"    pm.expect(jsonData.message).to.be.a('string');\r",
													"});\r",
													"\r",
													"pm.test(\"Status is success\", function () {\r",
													"    pm.expect(jsonData.status).to.eql('success');\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_Url}}/profile",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"profile"
											]
										}
									},
									"response": [
										{
											"name": "Get Profile",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{Base_url}}/profile",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "337"
												},
												{
													"key": "ETag",
													"value": "W/\"151-cAY6/ywS5aT8DVaH29V3vv67xUY\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 15:57:51 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"e824e3a7-f1a6-44d6-bcf4-61fbe2700754\",\n        \"firstName\": \"John\",\n        \"lastName\": \"Doe\",\n        \"companyRole\": \"SOFTWARE_ENGINEER\",\n        \"phone\": \"08123456789\",\n        \"country\": \"NGN\",\n        \"userId\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n        \"createdAt\": \"2023-11-09T00:24:26.064Z\",\n        \"updatedAt\": \"2023-11-09T00:24:26.064Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Update profile",
							"item": [
								{
									"name": "Update Profile",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"Adew\",\n    \"lastName\": \"Wunmi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/profile",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"profile"
											]
										}
									},
									"response": [
										{
											"name": "Update Profile",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Adew\",\n    \"lastName\": \"Wunmi\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/profile",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "339"
												},
												{
													"key": "ETag",
													"value": "W/\"153-6LiuZ0ijkrtWhFKfHjxgu+SLjBo\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 15:59:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"e824e3a7-f1a6-44d6-bcf4-61fbe2700754\",\n        \"firstName\": \"Adew\",\n        \"lastName\": \"Wunmi\",\n        \"companyRole\": \"SOFTWARE_ENGINEER\",\n        \"phone\": \"08123456789\",\n        \"country\": \"NGN\",\n        \"userId\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n        \"createdAt\": \"2023-11-09T00:24:26.064Z\",\n        \"updatedAt\": \"2023-11-09T15:58:57.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								},
								{
									"name": "Update Profile - Blank firstname",
									"request": {
										"auth": {
											"type": "bearer",
											"bearer": [
												{
													"key": "token",
													"value": "{{accesstoken}}",
													"type": "string"
												}
											]
										},
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"firstName\": \"\",\n    \"lastName\": \"Wunmi\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_Url}}/profile",
											"host": [
												"{{Base_Url}}"
											],
											"path": [
												"profile"
											]
										}
									},
									"response": [
										{
											"name": "Update Profile",
											"originalRequest": {
												"method": "PATCH",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"firstName\": \"Adew\",\n    \"lastName\": \"Wunmi\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{Base_url}}/profile",
													"host": [
														"{{Base_url}}"
													],
													"path": [
														"profile"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "X-Powered-By",
													"value": "Express"
												},
												{
													"key": "Content-Type",
													"value": "application/json; charset=utf-8"
												},
												{
													"key": "Content-Length",
													"value": "339"
												},
												{
													"key": "ETag",
													"value": "W/\"153-6LiuZ0ijkrtWhFKfHjxgu+SLjBo\""
												},
												{
													"key": "Date",
													"value": "Thu, 09 Nov 2023 15:59:00 GMT"
												},
												{
													"key": "Connection",
													"value": "keep-alive"
												},
												{
													"key": "Keep-Alive",
													"value": "timeout=5"
												}
											],
											"cookie": [],
											"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"e824e3a7-f1a6-44d6-bcf4-61fbe2700754\",\n        \"firstName\": \"Adew\",\n        \"lastName\": \"Wunmi\",\n        \"companyRole\": \"SOFTWARE_ENGINEER\",\n        \"phone\": \"08123456789\",\n        \"country\": \"NGN\",\n        \"userId\": \"6aabbba1-347d-47c9-9319-d38ff2222182\",\n        \"createdAt\": \"2023-11-09T00:24:26.064Z\",\n        \"updatedAt\": \"2023-11-09T15:58:57.000Z\",\n        \"deletedAt\": null\n    }\n}"
										}
									]
								}
							]
						},
						{
							"name": "Change Password",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"oldPassword\": \"Password1#\",\n    \"newPassword\": \"Password1#\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/profile/password",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"profile",
										"password"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Audit Trail",
					"item": [
						{
							"name": "Get Audit Trail",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('array');\r",
											"    pm.expect(jsonData._meta).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Audit trail fetched successfully.');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/audit-trail?page=1",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"audit-trail"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "2",
											"disabled": true
										},
										{
											"key": "event",
											"value": "auth.signup",
											"disabled": true
										},
										{
											"key": "createdAt-gt",
											"value": "2023-11-11T17:20:57.737Z",
											"disabled": true
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Audit Log",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code response is OK\", function () {\r",
											"    pm.response.to.have.status('OK');\r",
											"});\r",
											"\r",
											"var jsonData = pm.response.json();\r",
											"\r",
											"pm.test(\"Response body property\", function () {\r",
											"    pm.expect(jsonData).to.be.an('object');\r",
											"    pm.expect(jsonData.status).to.be.a('string');\r",
											"    pm.expect(jsonData.message).to.be.a('string');\r",
											"    pm.expect(jsonData.data).to.be.an('object');\r",
											"});\r",
											"\r",
											"pm.test(\"Status is success\", function () {\r",
											"    pm.expect(jsonData.status).to.eql('success');\r",
											"});\r",
											"\r",
											"pm.test(\"Message is present\", function () {\r",
											"    pm.expect(jsonData.message).to.eql('Audit log fetched successfully.');\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/audit-trail/:logId",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"audit-trail",
										":logId"
									],
									"variable": [
										{
											"key": "logId",
											"value": "a8c91ba8-30b1-43c5-aeb6-377d980ced31"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Collections",
					"item": [
						{
							"name": "List Collections",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"response": [
								{
									"name": "List Collections",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_url}}/collections",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "209"
										},
										{
											"key": "ETag",
											"value": "W/\"d1-UzrocuETXGLaTJmKa0J0o5Q7VU4\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:15:31 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"1\",\n            \"name\": \"Accounts\",\n            \"slug\": \"accounts\",\n            \"description\": \"accounts\",\n            \"createdAt\": \"2023-11-15T03:07:13.666Z\",\n            \"updatedAt\": \"2023-11-15T10:14:45.041Z\",\n            \"deletedAt\": null\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "View Collection",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "View Collection",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_url}}/collections/:id",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "207"
										},
										{
											"key": "ETag",
											"value": "W/\"cf-2nRD8Ik7fqg3hXk7D8hug1ST5tE\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:24:21 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"1\",\n        \"name\": \"Accounts\",\n        \"slug\": \"accounts\",\n        \"description\": \"accounts\",\n        \"createdAt\": \"2023-11-15T03:07:13.666Z\",\n        \"updatedAt\": \"2023-11-15T10:14:45.041Z\",\n        \"deletedAt\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Create Collection",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{accesstoken}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Transactions\",\n    \"description\": \"transactions\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/collections",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections"
									]
								}
							},
							"response": [
								{
									"name": "New Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Transactions\",\n    \"description\": \"transactions\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_url}}/collections",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "254"
										},
										{
											"key": "ETag",
											"value": "W/\"fe-UYlQquVRLXgFsIZqO/xEIcws5rM\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:27:14 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"name\": \"Transactions\",\n        \"slug\": \"transactions\",\n        \"description\": \"transactions\",\n        \"deletedAt\": null,\n        \"id\": \"372db1e1-17ed-4700-9070-368711f7bce6\",\n        \"createdAt\": \"2023-11-15T10:27:14.505Z\",\n        \"updatedAt\": \"2023-11-15T10:27:14.505Z\"\n    }\n}"
								}
							]
						},
						{
							"name": "Update Collection",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"description\": \"These endpoints are used to get transaction data, mostly known as account statement, for customers who have authorized their accounts to be accessed by the AC. The endpoints also support transactions such as transfer to accounts within the same bank or to other banks. Transfers within the API Provider or to other FIs are handled by whatever internal mechanism being used by the API Provider and cannot be specified by the AC.\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/collections/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "372db1e1-17ed-4700-9070-368711f7bce6"
										}
									]
								}
							},
							"response": [
								{
									"name": "Update Collection",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"description\": \"These endpoints are used to get transaction data, mostly known as account statement, for customers who have authorized their accounts to be accessed by the AC. The endpoints also support transactions such as transfer to accounts within the same bank or to other banks. Transfers within the API Provider or to other FIs are handled by whatever internal mechanism being used by the API Provider and cannot be specified by the AC.\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_url}}/collections/:id",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "372db1e1-17ed-4700-9070-368711f7bce6"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "669"
										},
										{
											"key": "ETag",
											"value": "W/\"29d-s+dfah6QVfhjNP7NMmYpHf+XvTA\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:37:56 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"372db1e1-17ed-4700-9070-368711f7bce6\",\n        \"name\": \"Transactions\",\n        \"slug\": \"transactions\",\n        \"description\": \"These endpoints are used to get transaction data, mostly known as account statement, for customers who have authorized their accounts to be accessed by the AC. The endpoints also support transactions such as transfer to accounts within the same bank or to other banks. Transfers within the API Provider or to other FIs are handled by whatever internal mechanism being used by the API Provider and cannot be specified by the AC.\",\n        \"createdAt\": \"2023-11-15T10:27:14.505Z\",\n        \"updatedAt\": \"2023-11-15T10:37:50.000Z\",\n        \"deletedAt\": null\n    }\n}"
								}
							]
						},
						{
							"name": "Add API Endpoint",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"Get Accounts\",\n    \"enabled\": true,\n    \"url\": \"https://httpbin.org/json\",\n    \"route\": {\n        \"paths\": [\"/accounts\"],\n        \"methods\": [\"GET\"]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/collections/:id/apis",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										":id",
										"apis"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "Add API Endpoint",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"Get Accounts\",\n    \"enabled\": true,\n    \"url\": \"https://httpbin.org/json\",\n    \"route\": {\n        \"paths\": [\"/accounts\"],\n        \"methods\": [\"GET\"]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_url}}/collections/:id/apis",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												":id",
												"apis"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "276"
										},
										{
											"key": "ETag",
											"value": "W/\"114-aQpyDY6UaoV9b38fZJLoFqOu4BM\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:21:09 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"c11209c2-da51-4212-8782-df1e911fa861\",\n        \"name\": \"get-accounts\",\n        \"enabled\": true,\n        \"host\": \"httpbin.org\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/json\",\n        \"url\": \"https://httpbin.org:443/json\",\n        \"route\": {\n            \"paths\": [\n                \"/accounts\"\n            ],\n            \"methods\": [\n                \"GET\"\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "View API Endpoints",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections/:id/apis",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										":id",
										"apis"
									],
									"variable": [
										{
											"key": "id",
											"value": "1"
										}
									]
								}
							},
							"response": [
								{
									"name": "View API Endpoints",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_url}}/collections/:id/apis",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												":id",
												"apis"
											],
											"variable": [
												{
													"key": "id",
													"value": "1"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "499"
										},
										{
											"key": "ETag",
											"value": "W/\"1f3-d8GZcl8qZqL5wcDB3QhpRIa0gbI\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:40:06 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": [\n        {\n            \"id\": \"14681a5b-c765-4f90-ac03-9848f372bb1d\",\n            \"name\": \"list-accounts\",\n            \"enabled\": true,\n            \"host\": \"httpbin.org\",\n            \"protocol\": \"https\",\n            \"port\": 443,\n            \"path\": \"/json\",\n            \"url\": \"https://httpbin.org:443/json\",\n            \"route\": {\n                \"paths\": [],\n                \"methods\": []\n            }\n        },\n        {\n            \"id\": \"c11209c2-da51-4212-8782-df1e911fa861\",\n            \"name\": \"get-accounts\",\n            \"enabled\": true,\n            \"host\": \"httpbin.org\",\n            \"protocol\": \"https\",\n            \"port\": 443,\n            \"path\": \"/json\",\n            \"url\": \"https://httpbin.org:443/json\",\n            \"route\": {\n                \"paths\": [\n                    \"/accounts\"\n                ],\n                \"methods\": [\n                    \"GET\"\n                ]\n            }\n        }\n    ]\n}"
								}
							]
						},
						{
							"name": "View API Endpoint",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections/apis/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										"apis",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "c11209c2-da51-4212-8782-df1e911fa861"
										}
									]
								}
							},
							"response": [
								{
									"name": "View API Endpoint",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{Base_url}}/collections/apis/:id",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												"apis",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "c11209c2-da51-4212-8782-df1e911fa861"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "276"
										},
										{
											"key": "ETag",
											"value": "W/\"114-aQpyDY6UaoV9b38fZJLoFqOu4BM\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:41:10 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"c11209c2-da51-4212-8782-df1e911fa861\",\n        \"name\": \"get-accounts\",\n        \"enabled\": true,\n        \"host\": \"httpbin.org\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/json\",\n        \"url\": \"https://httpbin.org:443/json\",\n        \"route\": {\n            \"paths\": [\n                \"/accounts\"\n            ],\n            \"methods\": [\n                \"GET\"\n            ]\n        }\n    }\n}"
								}
							]
						},
						{
							"name": "*Delete API Endpoint",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections/apis/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										"apis",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "14681a5b-c765-4f90-ac03-9848f372bb1d"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "*Delete API Collection",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{Base_Url}}/collections/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update API Endpoint",
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"get-accounts\",\n    \"enabled\": false,\n    \"url\": \"https://httpbin.org:443/json\",\n    \"route\": {\n        \"paths\": [\n            \"/accounts\"\n        ],\n        \"methods\": [\n            \"GET\"\n        ]\n    }\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{Base_Url}}/collections/apis/:id",
									"host": [
										"{{Base_Url}}"
									],
									"path": [
										"collections",
										"apis",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "c11209c2-da51-4212-8782-df1e911fa861"
										}
									]
								}
							},
							"response": [
								{
									"name": "Update API Endpoint",
									"originalRequest": {
										"method": "PATCH",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"name\": \"get-accounts\",\n    \"enabled\": false,\n    \"url\": \"https://httpbin.org:443/json\",\n    \"route\": {\n        \"paths\": [\n            \"/accounts\"\n        ],\n        \"methods\": [\n            \"GET\"\n        ]\n    }\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{Base_url}}/collections/apis/:id",
											"host": [
												"{{Base_url}}"
											],
											"path": [
												"collections",
												"apis",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": "c11209c2-da51-4212-8782-df1e911fa861"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "X-Powered-By",
											"value": "Express"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										},
										{
											"key": "Content-Length",
											"value": "277"
										},
										{
											"key": "ETag",
											"value": "W/\"115-dOu+spKBMuZX7iFmUNd7hpf9XnI\""
										},
										{
											"key": "Date",
											"value": "Wed, 15 Nov 2023 10:46:07 GMT"
										},
										{
											"key": "Connection",
											"value": "keep-alive"
										},
										{
											"key": "Keep-Alive",
											"value": "timeout=5"
										}
									],
									"cookie": [],
									"body": "{\n    \"status\": \"success\",\n    \"message\": \"\",\n    \"data\": {\n        \"id\": \"c11209c2-da51-4212-8782-df1e911fa861\",\n        \"name\": \"get-accounts\",\n        \"enabled\": false,\n        \"host\": \"httpbin.org\",\n        \"protocol\": \"https\",\n        \"port\": 443,\n        \"path\": \"/json\",\n        \"url\": \"https://httpbin.org:443/json\",\n        \"route\": {\n            \"paths\": [\n                \"/accounts\"\n            ],\n            \"methods\": [\n                \"GET\"\n            ]\n        }\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Check Health",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{Base_url}}/app/health",
							"host": [
								"{{Base_url}}"
							],
							"path": [
								"app",
								"health"
							]
						}
					},
					"response": [
						{
							"name": "active",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/app/health",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"app",
										"health"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "58"
								},
								{
									"key": "ETag",
									"value": "W/\"3a-JkQo+epZ8MdmCSPNrG2bXOszM54\""
								},
								{
									"key": "Date",
									"value": "Thu, 02 Nov 2023 16:31:02 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"status\": \"active\",\n    \"timestamp\": \"2023-11-02T16:31:02.620Z\"\n}"
						}
					]
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{Token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Base_url",
			"value": "3.134.253.153:4000"
		},
		{
			"key": "Token",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": ""
		}
	]
}